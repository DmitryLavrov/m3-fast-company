{"version":3,"sources":["reportWebVitals.js","services/localStorage.service.js","services/auth.service.js","services/http.service.js","services/profession.service.js","utils/isOutdated.js","store/professions.js","services/user.service.js","utils/history.js","utils/generateAuthError.js","store/users.js","components/page/userPage/userCardInfo.jsx","services/quality.service.js","store/qualities.js","components/ui/qualities/qualities.jsx","components/page/userPage/userCardQualities.jsx","components/page/userPage/userCardMeetings.jsx","components/page/userPage/userCard.jsx","components/page/userPage/comment.jsx","utils/prepareDateForRender.js","services/comment.service.js","store/comments.js","components/page/userPage/commentsList.jsx","components/common/form/textField.jsx","utils/validator.js","components/page/userPage/commentForm.jsx","components/page/userPage/index.js","components/page/userPage/userPage.jsx","components/common/pagination.jsx","components/common/groupList.jsx","components/ui/searchStatus.jsx","components/common/bookmark.jsx","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/ui/profession.jsx","components/ui/usersTable.jsx","components/page/usersListPage/index.js","components/page/usersListPage/usersListPage.jsx","utils/paginate.js","components/ui/hoc/usersLoader.jsx","components/common/form/selectField.jsx","components/common/form/radioField.jsx","components/common/form/multiSelectField.jsx","components/common/form/checkboxField.jsx","components/page/editUserPage/editUserPage.jsx","layouts/users.jsx","components/ui/navProfile.jsx","components/ui/navBar.jsx","utils/mockData.js","layouts/main.jsx","components/ui/loginForm.jsx","components/ui/registerForm.jsx","layouts/login.jsx","components/common/protectedRoute.jsx","layouts/logout.jsx","components/ui/hoc/appLoader.jsx","app.jsx","store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ACCESS_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setToken","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","config","apiEndpoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","payload","a","post","data","login","email","password","returnSecureToken","refresh","grant_type","refresh_token","http","configFile","interceptors","request","use","now","headers","Authorization","err","Promise","reject","response","res","content","status","toast","info","httpService","get","put","patch","delete","professionService","isOutdated","date","professionsSlice","createSlice","name","initialState","entities","isLoading","error","lastFetch","reducers","professionsRequested","state","professionsReceived","action","professionsRequestFailed","actions","loadProfessionsList","dispatch","professions","message","getProfessionById","id","find","p","_id","professionsReducer","reducer","userEndpoint","userService","update","getById","getCurrentUser","history","createBrowserHistory","generateAuthError","auth","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceived","usersRequestFailed","authRequestSuccess","authRequested","authRequestFailed","userCreated","push","userCreateFailed","userUpdated","idx","findIndex","i","userUpdateFailed","userLoggedOut","loadUsersList","userUpdateRequested","createAction","updateUserData","updateUser","getUserById","users","u","usersReducer","UserCardInfo","user","currentUserId","useSelector","professionIsLoading","prof","profession","useHistory","className","onClick","src","image","width","alt","role","rate","qualityService","qualitiesSlice","qualitiesRequested","qualitiesReceived","qualitiesRequestFailed","loadQualitiesList","qualities","qualitiesReducer","Qualities","qualitiesId","useDispatch","useEffect","userQualities","map","q","color","Quality","UserCardQualities","UserCardMeetings","completedMeetings","UserCard","Comment","comment","onDelete","messageDate","start","end","startDate","interval","diffMinutes","diffDays","minutes","getMinutes","slice","hours","getHours","days","getDate","months","getMonth","years","getFullYear","prepareDateForRender","createdAt","height","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","deleteComment","commentsSlice","commentsRequested","commentsReceived","commentsRequestFailed","commentCreated","commentCreateFailed","commentDeleted","filter","c","commentDeleteFailed","commentCreateRequested","commentDeleteRequested","commentsReducer","CommentsList","comments","useParams","loadCommentsList","handleDelete","sortedComments","TextField","label","type","value","onChange","useState","showPassword","setShowPassword","inputClasses","htmlFor","event","target","prev","validator","errors","validate","validateMethod","Object","keys","length","trim","test","fieldName","validatorConfig","isRequired","CommentForm","setData","setErrors","isValid","onSubmit","preventDefault","field","disabled","UserPage","Pagination","numberOfUsers","usersPerPage","currentPage","onPageChange","numberOfPages","Math","ceil","pageNumbers","_","range","pageNumber","GroupList","selectedItem","items","valueProperty","contentProperty","onItemSelect","SearchStatus","number","letterA","digits","toString","split","includes","Bookmark","onBookmark","style","fontSize","TableHeader","columns","sortSet","onSort","scope","path","order","TableBody","renderContent","item","column","component","Table","children","Profession","UsersTable","to","bookmark","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","search","setSearch","allUsers","professionsLoading","filteredUsers","toLowerCase","filterUsers","usersOfPage","itemsPerPage","startIndex","take","paginate","floor","placeholder","pageIndex","UsersLoader","dataStatus","SelectField","defaultOption","options","optionsArray","Array","isArray","required","RadioField","handleChange","checked","MultiSelectField","isMulti","closeMenuOnSelect","defaultValue","classNamePrefix","CheckboxField","isEmail","hasCapital","hasNumber","min","license","EditUserPage","currentUser","professionsList","qualityIsLoading","qualitiesList","fillData","sex","fillQualities","handleSubmit","newData","Users","edit","NavProfile","isOpen","setOpen","right","NavBar","exact","activeStyle","fontWeight","useMockData","statusConsts","setError","setStatus","progress","setProgress","count","setCount","summaryCount","incrementCount","newProgress","updateProgress","initialize","Main","isAdmin","LoginForm","stayOn","loginError","redirect","location","from","pathname","code","errorMessage","RegisterForm","Login","formType","setFormType","toggleFormType","ProtectedRoute","Component","rest","render","props","Logout","AppLoader","usersIsLoading","App","rootReducer","combineReducers","createStore","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"gKAYeA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+GCPRQ,EAAa,mBACbC,EAAc,oBACdC,EAAc,cACdC,EAAa,gBAiCnB,IASeC,EATa,CAC1BC,SAhCK,YAA0E,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,OAA2B,IAAnBC,iBAAmB,MAAP,KAAO,EACxEC,GAAc,IAAIC,MAAOC,UAAwB,IAAZH,EAC3CI,aAAaC,QAAQd,EAAYO,GACjCM,aAAaC,QAAQX,EAAYK,GACjCK,aAAaC,QAAQb,EAAaK,GAClCO,aAAaC,QAAQZ,EAAaQ,IA4BlCK,eAzBK,WACL,OAAOF,aAAaG,QAAQhB,IAyB5BiB,gBAtBK,WACL,OAAOJ,aAAaG,QAAQf,IAsB5BiB,eAnBK,WACL,OAAOL,aAAaG,QAAQd,IAmB5BiB,UAhBK,WACL,OAAON,aAAaG,QAAQb,IAgB5BiB,eAbK,WACLP,aAAaQ,WAAWrB,GACxBa,aAAaQ,WAAWlB,GACxBU,aAAaQ,WAAWpB,GACxBY,aAAaQ,WAAWnB,KC7BpBoB,EAAWC,IAAMC,OAAO,CAC5BC,QAASC,EAAOC,YAAc,QAC9BC,OAAQ,CACNC,IAAKC,mIAAYC,0BAkCNC,EA9BK,CAClBC,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAC,EAAA,sEACab,EAASc,KAAK,UAAWF,GADtC,uBACDG,EADC,EACDA,KADC,kBAEDA,GAFC,2CAAF,mDAAC,GAITC,MAAM,WAAD,4BAAE,mCAAAH,EAAA,6DAAQI,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAf,SACgBlB,EAASc,KAAK,sBACjC,CAACG,QAAOC,WAAUC,mBAAmB,IAFlC,uBACEJ,EADF,EACEA,KADF,kBAGEA,GAHF,2CAAF,mDAAC,GAKNK,QAAQ,WAAD,4BAAE,8BAAAP,EAAA,sEACcb,EAASc,KAAK,SAAU,CAC3CO,WAAY,gBACZC,cAAexC,EAAoBa,oBAH9B,uBACAoB,EADA,EACAA,KADA,kBAKAA,GALA,2CAAF,kDAAC,ICdJQ,EAAOtB,IAAMC,OAAO,CACxBC,QAASqB,EAAWnB,cAGtBkB,EAAKE,aAAaC,QAAQC,IAA1B,uCACE,WAAgBvB,GAAhB,mBAAAS,EAAA,yDACQzB,EAAcN,EAAoBc,mBACnBd,EAAoBa,mBAErBP,EAAcC,KAAKuC,OAJzC,gCAKuBlB,EAAYU,UALnC,OAKUL,EALV,OAMIjC,EAAoBC,SAASgC,GANjC,uBAQIjC,EAAoBgB,iBARxB,eAWQb,EAAcH,EAAoBW,oBAEtCW,EAAOyB,QAAP,2BACKzB,EAAOyB,SADZ,IAEEC,cAAe,UAAY7C,KAfjC,kBAmBSmB,GAnBT,4CADF,uDAqBK,SAAU2B,GACX,OAAOC,QAAQC,OAAOF,MAI1BR,EAAKE,aAAaS,SAASP,KAAI,SAAAQ,GAE3B,OADAA,EAAIpB,KAAO,CAACqB,QAASD,EAAIpB,MAClBoB,KAET,SAAAJ,GAKE,OAJsBA,EAAIG,UAAYH,EAAIG,SAASG,QAAU,KAAON,EAAIG,SAASG,OAAS,KAExFC,IAAMC,KAAK,mCAENP,QAAQC,OAAOF,MAI1B,IAQeS,EARK,CAClBC,IAAKlB,EAAKkB,IACV3B,KAAMS,EAAKT,KACX4B,IAAKnB,EAAKmB,IACVC,MAAOpB,EAAKoB,MACZC,OAAQrB,EAAKqB,QC5CAC,EAPW,CACxBJ,IAAI,WAAD,4BAAE,8BAAA5B,EAAA,sEACkB2B,EAAYC,IAJV,eAGpB,uBACI1B,EADJ,EACIA,KADJ,kBAEIA,GAFJ,2CAAF,kDAAC,ICDS+B,MAJf,SAAoBC,GAClB,OAAO1D,KAAKuC,MAASmB,EAAO,KCYxBC,EAAmBC,YAAY,CACnCC,KAAM,cACNC,aATmB,CACnBC,SAAU,KACVC,WAAW,EACXC,MAAO,KACPC,UAAW,MAMXC,SAAU,CACRC,qBADQ,SACaC,GACnBA,EAAML,WAAY,GAEpBM,oBAJQ,SAIYD,EAAOE,GACzBF,EAAMN,SAAWQ,EAAOhD,QACxB8C,EAAML,WAAY,EAClBK,EAAMH,UAAYlE,KAAKuC,OAEzBiC,yBATQ,SASiBH,EAAOE,GAC9BF,EAAMJ,MAAQM,EAAOhD,QACrB8C,EAAML,WAAY,EAClBf,IAAMC,KAAKmB,EAAMJ,WAKvB,EAA8EN,EAAiBc,QAAxFL,EAAP,EAAOA,qBAAsBE,EAA7B,EAA6BA,oBAAqBE,EAAlD,EAAkDA,yBAErCE,EAAsB,yDAAM,WAAOC,EAAUN,GAAjB,qBAAA7C,EAAA,0DACnCiC,EAAWY,IAAQO,YAAYV,WADI,wBAErCS,EAASP,KAF4B,kBAIXZ,EAAkBJ,MAJP,gBAI5BL,EAJ4B,EAI5BA,QACP4B,EAASL,EAAoBvB,IALM,kDAOnC4B,EAASH,GAAyB,eAAI3B,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAPhC,0DAAN,yDActBC,EAAoB,SAACC,GAAD,OAAQ,SAAAV,GACvC,OAAIA,EAAMO,YAAYb,SACbM,EAAMO,YAAYb,SAASiB,MAAK,SAAAC,GAAC,OAAKA,EAAEC,MAAQH,KAElD,KAKMI,EAFuBxB,EAA/ByB,QCrDDC,EAAe,SA6BNC,EA3BK,CAClBlC,IAAI,WAAD,4BAAE,8BAAA5B,EAAA,sEACkB2B,EAAYC,IAAIiC,GADlC,uBACI3D,EADJ,EACIA,KADJ,kBAEIA,GAFJ,2CAAF,kDAAC,GAKJb,OAAO,WAAD,4BAAE,WAAOU,GAAP,iBAAAC,EAAA,sEACe2B,EAAYE,IAAIgC,EAAe9D,EAAQ2D,IAAK3D,GAD3D,uBACCG,EADD,EACCA,KADD,kBAECA,GAFD,2CAAF,mDAAC,GAKP6D,OAAO,WAAD,4BAAE,WAAOR,EAAIxD,GAAX,iBAAAC,EAAA,sEACe2B,EAAYG,MAAM+B,EAAeN,EAAIxD,GADpD,uBACCG,EADD,EACCA,KADD,kBAECA,GAFD,2CAAF,qDAAC,GAKP8D,QAAQ,WAAD,4BAAE,WAAOT,GAAP,iBAAAvD,EAAA,sEACc2B,EAAYC,IAAIiC,EAAeN,GAD7C,uBACArD,EADA,EACAA,KADA,kBAEAA,GAFA,2CAAF,mDAAC,GAKR+D,eAAe,WAAD,4BAAE,8BAAAjE,EAAA,sEACO2B,EAAYC,IAAIiC,EAAe5F,EAAoBe,aAD1D,uBACPkB,EADO,EACPA,KADO,kBAEPA,GAFO,2CAAF,kDAAC,I,QCtBFgE,EAFCC,cCYDC,MAbf,SAA2Bf,GACzB,OAAQA,GACN,IAAK,mBACH,MAAO,wFACT,IAAK,kBACH,MAAO,yKACT,IAAK,eACH,MAAO,uMACT,QACE,MAAO,6NCDPf,EAAerE,EAAoBW,iBACrC,CACA2D,SAAU,KACVC,WAAW,EACXC,MAAO,KACP4B,KAAM,CAAChG,OAAQJ,EAAoBe,aACnCsF,YAAY,EACZC,YAAY,GAEZ,CACAhC,SAAU,KACVC,WAAW,EACXC,MAAO,KACP4B,KAAM,KACNC,YAAY,EACZC,YAAY,GAGVC,EAAapC,YAAY,CAC7BC,KAAM,QACNC,eACAK,SAAU,CACR8B,eADQ,SACO5B,GACbA,EAAML,WAAY,GAEpBkC,cAJQ,SAIM7B,EAAOE,GACnBF,EAAMN,SAAWQ,EAAOhD,QACxB8C,EAAML,WAAY,EAClBK,EAAM0B,YAAa,GAErBI,mBATQ,SASW9B,EAAOE,GACxBF,EAAMJ,MAAQM,EAAOhD,QACrB8C,EAAML,WAAY,EAClBf,IAAMC,KAAKmB,EAAMJ,QAEnBmC,mBAdQ,SAcW/B,EAAOE,GACxBF,EAAMwB,KAAOtB,EAAOhD,QACpB8C,EAAMyB,YAAa,GAErBO,cAlBQ,SAkBMhC,GACZA,EAAMJ,MAAQ,MAEhBqC,kBArBQ,SAqBUjC,EAAOE,GACvBF,EAAMJ,MAAQM,EAAOhD,QACrB0B,IAAMC,KAAKmB,EAAMJ,QAEnBsC,YAzBQ,SAyBIlC,EAAOE,GACjBF,EAAMN,SAASyC,KAAKjC,EAAOhD,UAE7BkF,iBA5BQ,SA4BSpC,EAAOE,GACtBF,EAAMJ,MAAQM,EAAOhD,QACrB0B,IAAMC,KAAKmB,EAAMJ,QAEnByC,YAhCQ,SAgCIrC,EAAOE,GACjB,IAAMoC,EAAMtC,EAAMN,SAAS6C,WAAU,SAAAC,GAAC,OAAIA,EAAE3B,MAAQzF,EAAoBe,eACxE6D,EAAMN,SAAS4C,GAAf,2BAA0BtC,EAAMN,SAAS4C,IAASpC,EAAOhD,UAE3DuF,iBApCQ,SAoCSzC,EAAOE,GACtBF,EAAMJ,MAAQM,EAAOhD,QACrB0B,IAAMC,KAAKmB,EAAMJ,QAEnB8C,cAxCQ,SAwCM1C,GACZA,EAAMN,SAAW,KACjBM,EAAMwB,KAAO,KACbxB,EAAMyB,YAAa,EACnBzB,EAAM0B,YAAa,MAKzB,EAYIC,EAAWvB,QAXbwB,EADF,EACEA,eACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,mBACAE,EAJF,EAIEA,cACAD,EALF,EAKEA,mBACAE,EANF,EAMEA,kBAGAI,EATF,EASEA,YACAI,EAVF,EAUEA,iBACAC,GAXF,EAWEA,cAIWC,GAAgB,yDAAM,WAAOrC,GAAP,qBAAAnD,EAAA,6DACjCmD,EAASsB,KADwB,kBAGPX,EAAYlC,MAHL,gBAGxBL,EAHwB,EAGxBA,QACP4B,EAASuB,EAAcnD,IAJQ,gDAM/B4B,EAASwB,GAAmB,eAAItD,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAN9B,yDAAN,uDAYvBoC,GAAsBC,YAAa,6BA2C5BC,GAAiB,SAAC5F,GAAD,8CAAa,WAAMoD,GAAN,iBAAAnD,EAAA,sDACzCmD,EAAS0B,KACT,IACE1B,EAASyC,GAAW3H,EAAoBe,YAAae,IACrD,MAAOmB,GACPiC,EAAS2B,GAAkB,UAAA5D,EAAIG,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAASvB,EAAImC,UALrB,2CAAb,uDAS9B,SAASuC,GAAWrC,EAAIxD,GACtB,8CAAO,WAAMoD,GAAN,qBAAAnD,EAAA,6DACLmD,EAASsC,MADJ,kBAGqB3B,EAAYC,OAAOR,EAAIxD,GAH5C,gBAGIwB,EAHJ,EAGIA,QACP4B,EAAS+B,EAAY3D,IACrB2C,EAAQc,KAAR,iBAAuBzB,IALpB,kDAOHJ,EAASmC,GAAiB,eAAIjE,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAPxD,0DAAP,sDAaK,IAEMwC,GAAc,SAACtC,GAAD,OAAQ,SAAAV,GACjC,OAAIA,EAAMiD,MAAMvD,SACPM,EAAMiD,MAAMvD,SAASiB,MAAK,SAAAuC,GAAC,OAAIA,EAAErC,MAAQH,KAE3C,KAkBMyC,GADiBxB,EAAzBZ,Q,QCzIQqC,GAlDM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACfC,EAAgBC,aDgLc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMzB,KAAKhG,UC/KxDgI,EAAsBD,aLsCmB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYZ,aKrCpE8D,EAAOF,YAAY9C,EAAkB4C,EAAKK,aAC1CrC,EAAUsC,cAMhB,OACE,sBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,SAEE,uBAAKA,UAAU,sEAAf,UAEGP,EAAKxC,MAAQyC,GACd,oBAAGM,UAAU,qDACVC,QAZU,WACnBxC,EAAQc,KAAR,iBAAuBkB,EAAKxC,IAA5B,WAUM,SAEE,oBAAG+C,UAAU,iBAGf,sBAAKE,IAAKT,EAAKU,MACVH,UAAU,iBAAiBI,MAAM,MAAMC,IAAI,SAEhD,uBAAKL,UAAU,OAAf,UACE,8BACGP,EAAK7D,OAER,oBAAGoE,UAAU,sBAAb,UACIJ,IAAD,OAAwBC,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMjE,QAEjC,uBAAKoE,UAAU,aAAf,UACE,oBAAGA,UAAU,qCAAqCM,KAAK,WACvD,oBAAGN,UAAU,gCAAgCM,KAAK,WAClD,uBAAMN,UAAU,OAAhB,SACGP,EAAKc,qBCjCPC,GAPQ,CACrBrF,IAAI,WAAD,4BAAE,8BAAA5B,EAAA,sEACkB2B,EAAYC,IAJb,YAGjB,uBACI1B,EADJ,EACIA,KADJ,kBAEIA,GAFJ,2CAAF,kDAAC,ICQAgH,GAAiB9E,YAAY,CACjCC,KAAM,YACNC,aATmB,CACnBC,SAAU,KACVC,WAAW,EACXC,MAAO,KACPC,UAAW,MAMXC,SAAU,CACRwE,mBADQ,SACWtE,GACjBA,EAAML,WAAY,GAEpB4E,kBAJQ,SAIUvE,EAAOE,GACvBF,EAAMN,SAAWQ,EAAOhD,QACxB8C,EAAML,WAAY,EAClBK,EAAMH,UAAYlE,KAAKuC,OAEzBsG,uBATQ,SASexE,EAAOE,GAC5BF,EAAMJ,MAAQM,EAAOhD,QACrB8C,EAAML,WAAY,EAClBf,IAAMC,KAAKmB,EAAMJ,WAKvB,GAAwEyE,GAAejE,QAAhFkE,GAAP,GAAOA,mBAAoBC,GAA3B,GAA2BA,kBAAmBC,GAA9C,GAA8CA,uBAEjCC,GAAoB,yDAAM,WAAOnE,EAAUN,GAAjB,qBAAA7C,EAAA,0DACjCiC,EAAWY,IAAQ0E,UAAU7E,WADI,wBAEnCS,EAASgE,MAF0B,kBAITF,GAAerF,MAJN,gBAI1BL,EAJ0B,EAI1BA,QACP4B,EAASiE,GAAkB7F,IALM,kDAOjC4B,EAASkE,IAAuB,eAAIhG,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAPhC,0DAAN,yDAiBlBmE,GAFqBN,GAA7BtD,QCfQ6D,GA9BG,SAAC,GAA8B,IAAlBC,EAAiB,EAA5BH,UACZpE,EAAWwE,cACXJ,EAAYnB,aDwCc,SAAAvD,GAAK,OAAIA,EAAM0E,UAAUhF,YCvCnDC,EAAY4D,aDwC2B,SAAAvD,GAAK,OAAIA,EAAM0E,UAAU/E,aClCtE,GAJAoF,qBAAU,WACRzE,EAASmE,SAGP9E,EACF,MAAO,aAGT,IAAMqF,EAAgBN,EAAYG,EAAYI,KAAI,SAAAvE,GAAE,OAAKgE,EAAU/D,MAAK,SAAAuE,GAAC,OAAKA,EAAErE,MAAQH,QAAS,GAEjG,OACE,qCACGsE,EAAcC,KAAI,SAACC,GAAD,OACjB,eAAC,GAAD,CACS1F,KAAM0F,EAAE1F,KACR2F,MAAOD,EAAEC,OAFJD,EAAErE,WAclBuE,GAAU,SAAC,GAAmB,IAAlB5F,EAAiB,EAAjBA,KAAM2F,EAAW,EAAXA,MACtB,OAAO,uBAAMvB,UAAS,mBAAcuB,EAAd,QAAf,SAA2C3F,KCfrC6F,GAnBW,SAAC,GAAiB,IAAhBX,EAAe,EAAfA,UAC1B,OACE,sBAAKd,UAAU,YAAf,SACE,uBAAKA,UAAU,kEAAf,UACE,qBAAIA,UAAU,aAAd,SACE,gDAEF,oBAAGA,UAAU,YAAb,SACE,eAAC,GAAD,CAAWc,UAAWA,YCUjBY,GAnBU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBACzB,OACE,sBAAK3B,UAAU,YAAf,SACE,uBAAKA,UAAU,kEAAf,UACE,qBAAIA,UAAU,aAAd,SACE,yDAEF,qBAAIA,UAAU,YAAd,SACG2B,UCaIC,GAjBE,SAAC,GAAY,IAAXnC,EAAU,EAAVA,KACjB,OACE,uBAAKO,UAAU,gBAAf,UACE,eAAC,GAAD,CAAcP,KAAMA,IAEpB,eAAC,GAAD,CAAmBqB,UAAWrB,EAAKqB,YAEnC,eAAC,GAAD,CAAkBa,kBAAmBlC,EAAKkC,wBCRhD,IA+CeE,GA/CC,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACnBrC,EAAgBC,aRkLc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMzB,KAAKhG,UQhLxD6H,EAAOE,YAAYP,GAAY0C,EAAQlK,SAEvCoK,ECXD,SAA8BC,EAAOC,GAC1C,IAAMC,EAAY,IAAIpK,KAAKkK,GACrBG,EAAWF,EAAMC,EAEjBE,EAAcD,EAAW,IAAO,GAEtC,GAAIC,EAAc,EAAG,MAAO,wEAC5B,GAAIA,EAAc,EAAG,MAAO,kEAC5B,GAAIA,EAAc,GAAI,MAAO,mEAC7B,GAAIA,EAAc,GAAI,MAAO,mEAE7B,IAAMC,EAAWF,EAAW,IAAO,GAAK,GAAK,GAEvCG,GAAW,IAAMJ,EAAUK,cAAcC,OAAO,GAChDC,GAAS,IAAMP,EAAUQ,YAAYF,OAAO,GAC5CG,GAAQ,IAAMT,EAAUU,WAAWJ,OAAO,GAC1CK,GAAU,KAAOX,EAAUY,WAAa,IAAIN,OAAO,GACnDO,EAAQb,EAAUc,cAExB,OAAIX,EAAW,EAAS,GAAN,OAAUI,EAAV,YAAmBH,GACjCD,EAAW,IAAW,GAAN,OAAUM,EAAV,YAAkBE,GAChC,GAAN,OAAUF,EAAV,YAAkBE,EAAlB,YAA4BE,GDVRE,CAAqBpB,EAAQqB,UAAWpL,KAAKuC,OAEjE,OACE,sBAAK0F,UAAU,0BAAf,SACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,SACE,uBAAKA,UAAU,oBAAf,UACE,sBAAKE,IAAKT,EAAKU,MACVH,UAAU,sCACVK,IAAI,SAASD,MAAM,KAAKgD,OAAO,OACpC,sBAAKpD,UAAU,4BAAf,SACE,uBAAKA,UAAU,OAAf,UACE,uBAAKA,UAAU,oDAAf,UACE,qBAAGA,UAAU,OAAb,UACGP,EAAK7D,KACN,uBAAMoE,UAAU,aAAhB,SACCgC,OAGFtC,IAAkBD,EAAKxC,KACxB,yBAAQ+C,UAAU,oDACVC,QAAS,kBAAM8B,EAASD,EAAQ7E,MADxC,SAEE,oBAAG+C,UAAU,oBAGjB,oBAAGA,UAAU,aAAb,SACG8B,EAAQhH,yBEnCrBuI,GAAkB,WAwBPC,GAtBM,CACrBC,cAAc,WAAD,4BAAE,WAAOzB,GAAP,iBAAAvI,EAAA,sEACQ2B,EAAY1B,KAAK6J,GAAiBvB,GAD1C,uBACNrI,EADM,EACNA,KADM,kBAENA,GAFM,2CAAF,mDAAC,GAKd+J,YAAY,WAAD,4BAAE,WAAOC,GAAP,iBAAAlK,EAAA,sEACU2B,EAAYC,IAAIkI,GAAiB,CACpDrK,OAAQ,CACN0K,QAAS,SACTC,QAAQ,GAAD,OAAKF,MAJL,uBACJhK,EADI,EACJA,KADI,kBAOJA,GAPI,2CAAF,mDAAC,GAUZmK,cAAc,WAAD,4BAAE,WAAO9G,GAAP,iBAAAvD,EAAA,sEACQ2B,EAAYI,OAAO+H,GAAkBvG,GAD7C,uBACNrD,EADM,EACNA,KADM,kBAENA,GAFM,2CAAF,mDAAC,ICRVoK,GAAgBlI,YAAY,CAChCC,KAAM,WACNC,aARmB,CACnBC,SAAU,KACVC,WAAW,EACXC,MAAO,MAMPE,SAAU,CACR4H,kBADQ,SACU1H,GAChBA,EAAML,WAAY,GAEpBgI,iBAJQ,SAIS3H,EAAOE,GACtBF,EAAMN,SAAWQ,EAAOhD,QACxB8C,EAAML,WAAY,GAEpBiI,sBARQ,SAQc5H,EAAOE,GAC3BF,EAAMJ,MAAQM,EAAOhD,QACrB8C,EAAML,WAAY,EAClBf,IAAMC,KAAKmB,EAAMJ,QAEnBiI,eAbQ,SAaO7H,EAAOE,GACpBF,EAAMN,SAASyC,KAAKjC,EAAOhD,UAE7B4K,oBAhBQ,SAgBY9H,EAAOE,GACzBF,EAAMJ,MAAQM,EAAOhD,QACrB0B,IAAMC,KAAKmB,EAAMJ,QAEnBmI,eApBQ,SAoBO/H,EAAOE,GACfA,EAAOhD,QAAQwB,UAClBsB,EAAMN,SAAWM,EAAMN,SAASsI,QAAO,SAAAC,GAAC,OAAKA,EAAEpH,MAAQX,EAAOhD,QAAQwD,QAG1EwH,oBAzBQ,SAyBYlI,EAAOE,GACzBF,EAAMJ,MAAQM,EAAOhD,QACrB0B,IAAMC,KAAKmB,EAAMJ,WAKvB,GAQI6H,GAAcrH,QAPhBsH,GADF,GACEA,kBACAC,GAFF,GAEEA,iBACAC,GAHF,GAGEA,sBACAC,GAJF,GAIEA,eACAC,GALF,GAKEA,oBACAC,GANF,GAMEA,eACAG,GAPF,GAOEA,oBAGIC,GAAyBtF,YAAa,mCACtCuF,GAAyBvF,YAAa,mCAwC7BwF,GADoBZ,GAA5B1G,Q,oBChDQuH,GAxCM,WACnB,IAAMhI,EAAWwE,cACXnF,EAAY4D,aDoF0B,SAAAvD,GAAK,OAAIA,EAAMuI,SAAS5I,aCnF9D4I,EAAWhF,aDiFc,SAAAvD,GAAK,OAAIA,EAAMuI,SAAS7I,YC/EhDlE,EAAUgN,cAAVhN,OAEPuJ,qBAAU,WACRzE,ED4C4B,SAAC9E,GAAD,8CAAY,WAAO8E,GAAP,qBAAAnD,EAAA,6DAC1CmD,EAASoH,MADiC,kBAGhBR,GAAeE,YAAY5L,GAHX,gBAGjCkD,EAHiC,EAGjCA,QACP4B,EAASqH,GAAiBjJ,IAJc,gDAMxC4B,EAASsH,IAAsB,eAAIpJ,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UANxB,yDAAZ,sDC5CnBiI,CAAiBjN,MACzB,CAACA,IAEJ,IAAMkN,EAAe,SAAChI,GACpBJ,ED6DyB,SAACI,GAAD,8CAAQ,WAAOJ,GAAP,qBAAAnD,EAAA,6DACnCmD,EAAS8H,MAD0B,kBAGTlB,GAAeM,cAAc9G,GAHpB,gBAG1BhC,EAH0B,EAG1BA,QACP4B,EAASyH,GAAe,CAACrH,KAAIhC,aAJI,gDAMjC4B,EAAS4H,IAAoB,eAAI1J,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAN7B,yDAAR,sDC7DhBgH,CAAc9G,KAGnBiI,EAAiBrB,mBAAQiB,EAAU,CAAC,aAAc,CAAC,SAEzD,OACE,sBAAK3E,UAAU,YAAf,SACE,uBAAKA,UAAU,YAAf,UACE,2CACA,wBAECjE,EACG,4CACAgJ,EAAe1D,KAAI,SAAAS,GAAO,OAC1B,eAAC,GAAD,CAA2BA,QAASA,EAASC,SAAU+C,GAAzChD,EAAQ7E,c,gBCMnB+H,GAtCG,SAAC,GAA0D,IAAzDpJ,EAAwD,EAAxDA,KAAMqJ,EAAkD,EAAlDA,MAAkD,IAA3CC,YAA2C,MAApC,OAAoC,EAA5BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUpJ,EAAW,EAAXA,MAC/D,EAAwCqJ,oBAAS,GAAjD,oBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAe,gBAAkBxJ,EAAQ,cAAgB,IAU/D,OACE,uBAAKgE,UAAU,OAAf,UACE,wBAAOyF,QAAS7J,EAAhB,SAAuBqJ,IACvB,uBAAKjF,UAAU,6BAAf,UACE,wBAAOpE,KAAMA,EAAMkB,GAAIlB,EAAMsJ,KAAMI,EAAe,OAASJ,EAAMC,MAAOA,EAAOC,SARhE,SAACM,GACpBN,EAAS,CAACxJ,KAAM8J,EAAMC,OAAO/J,KAAMuJ,MAAOO,EAAMC,OAAOR,SAQ5CnF,UAAWwF,IACR,aAATN,GACD,yBAAQlF,UAAU,4BAA4BkF,KAAK,SAASjF,QAfvC,WACzBsF,GAAgB,SAAAK,GAAI,OAAKA,MAcrB,SACE,oBAAG5F,UAAW,aAAesF,EAAe,SAAW,QAExDtJ,GAAS,sBAAKgE,UAAU,mBAAf,SAAmChE,WC1B9C,SAAS6J,GAAUpM,EAAMX,GAC9B,IAAMgN,EAAS,GAEf,SAASC,EAASC,EAAgBvM,EAAMX,GACtC,OAAQkN,GACN,IAAK,aACH,GAAoB,mBAATvM,GACT,IAAKA,EAAM,OAAOX,EAAO8D,aACpB,GAAoB,kBAATnD,GAChB,GAAiC,IAA7BwM,OAAOC,KAAKzM,GAAM0M,OAAc,OAAOrN,EAAO8D,aAElD,GAAoB,KAAhBnD,EAAK2M,OAAe,OAAOtN,EAAO8D,QAExC,MACF,IAAK,UAGH,IADoB,kBACHyJ,KAAK5M,GAAO,OAAOX,EAAO8D,QAC3C,MACF,IAAK,aAGH,IADsB,UACHyJ,KAAK5M,GAAO,OAAOX,EAAO8D,QAC7C,MACF,IAAK,YAGH,IADqB,OACHyJ,KAAK5M,GAAO,OAAOX,EAAO8D,QAC5C,MACF,IAAK,MACH,GAAInD,EAAK0M,OAASrN,EAAOqM,MAAO,OAAOrM,EAAO8D,SAKpD,IAAK,IAAM0J,KAAa7M,EACtB,IAAK,IAAMuM,KAAkBlN,EAAOwN,GAAY,CAC9C,IAAMtK,EAAQ+J,EAASC,EAAgBvM,EAAK6M,GAAYxN,EAAOwN,GAAWN,IACtEhK,IAAU8J,EAAOQ,KACnBR,EAAOQ,GAAatK,GAK1B,OAAO8J,ECnCT,IAAMS,GAAkB,CACtBzL,QAAS,CACP0L,WAAY,CAAC5J,QAAS,sKAuEX6J,GAnEK,SAAC,GAAsB,IAAbhD,EAAY,EAApB7L,OACd8E,EAAWwE,cACjB,EAAwBmE,mBAAS,CAACvK,QAAS,KAA3C,oBAAOrB,EAAP,KAAaiN,EAAb,KACA,EAA4BrB,mBAAS,IAArC,oBAAOS,EAAP,KAAea,EAAf,KACM/O,EAAS+H,afsKqB,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMzB,KAAKhG,UepK9DuJ,qBAAU,WACR4E,MACC,CAACtM,IAEJ,IAAMsM,EAAW,WACf,IAAMD,EAASD,GAAUpM,EAAM8M,IAE/B,OADAI,EAAUb,GAC4B,IAA/BG,OAAOC,KAAKJ,GAAQK,QAkBvBS,EAA0C,IAA/BX,OAAOC,KAAKJ,GAAQK,OAErC,OACE,sBAAKnG,UAAU,YAAf,SACE,uBAAKA,UAAU,YAAf,UACE,8CAEA,wBAAM6G,SAfS,SAACnB,GAEpB,IJgC0BpM,GIjC1BoM,EAAMoB,iBACUf,MAGhBrJ,GJ6B0BpD,EI7BH,2BAAIG,GAAL,IAAWgK,SAAQ7L,WJ6BhB,uCAAa,WAAO8E,GAAP,qBAAAnD,EAAA,6DACxCmD,EAAS6H,MAD+B,kBAGdjB,GAAeC,cAAcjK,GAHf,gBAG/BwB,EAH+B,EAG/BA,QACP4B,EAASuH,GAAenJ,IAJc,gDAMtC4B,EAASwH,IAAoB,eAAItJ,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UANxB,yDAAb,yDInBrB,UAEE,sBAAKoD,UAAU,OAAf,SACE,eAAC,GAAD,CAAWpE,KAAK,UACLqJ,MAAM,yDACNE,MAAO1L,EAAKqB,QACZsK,SA5BA,SAAC2B,GACpBL,GAAQ,SAAAd,GAAI,kCACPA,GADO,mBAETmB,EAAMnL,KAAOmL,EAAM5B,YA0BHnJ,MAAO8J,EAAOhL,YAG3B,sBAAKkF,UAAU,WAAf,SACE,yBAAQA,UAAU,kBACVkF,KAAK,SACL8B,UAAWJ,EAFnB,+EC/DGK,GCQE,SAAC,GAAc,IAAbrP,EAAY,EAAZA,OACX6H,EAAOE,YAAYP,GAAYxH,IAErC,OAAK6H,EAGH,sBAAKO,UAAU,YAAf,SACE,uBAAKA,UAAU,iBAAf,UACE,eAAC,GAAD,CAAUP,KAAMA,IAEhB,uBAAKO,UAAU,WAAf,UACE,eAAC,GAAD,CAAapI,OAAQA,IAErB,eAAC,GAAD,YAVU,+CCuBLsP,GA/BI,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,cAAeC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACvDC,EAAgBC,KAAKC,KAAKN,EAAgBC,GAEhD,GAAsB,IAAlBG,EAAqB,OAAO,KAEhC,IAAMG,EAAcC,KAAEC,MAAM,EAAGL,EAAgB,GAE/C,OACE,sBAAK,aAAW,0BAAhB,SACE,qBAAIvH,UAAU,aAAd,SACG0H,EAAYrG,KAAI,SAACwG,GAChB,OACE,qBAAqB7H,UAAW,aAAe6H,IAAeR,EAAc,UAAY,IAAxF,SACE,yBAAQrH,UAAW,YAAaC,QAAS,kBAAMqH,EAAaO,IAA5D,SACGA,KAFIA,WCbrB,IA4BeC,GA5BG,SAAC,GAA0F,IAAzFC,EAAwF,EAAxFA,aAAcC,EAA0E,EAA1EA,MAA0E,IAAnEC,qBAAmE,MAAnD,MAAmD,MAA5CC,uBAA4C,MAA1B,OAA0B,EAAlBC,EAAkB,EAAlBA,aACxF,OACE,qBAAInI,UAAU,aAAd,SACGiG,OAAOC,KAAK8B,GAAO3G,KAAI,SAAApI,GAAG,OACzB,qBACI+G,UAAW,mBAAqBgI,EAAM/O,KAAS8O,EAAe,UAAY,IAC1EzH,KAAK,SACLL,QAAS,kBAAMkI,EAAaH,EAAM/O,KAHtC,SAIG+O,EAAM/O,GAAKiP,IAJLF,EAAM/O,GAAKgP,UCqBbG,GAzBM,SAAC,GAAqB,IACnBC,EADDlB,EAAmB,EAAnBA,cAOfmB,EAAU,SAACD,GACf,IAAME,EAASF,EAAOG,WAAWC,MAAM,IACvC,MAAkB,MAAdF,EAAO,GAAmB,GAC1B,CAAC,IAAK,IAAK,KAAKG,SAASH,EAAO,IAAY,SACzC,IAGT,OACE,8BACE,uBAAMvI,UAAS,mBAAcmH,EAAgB,UAAY,UAAzD,UAfkBkB,EAeiElB,EAdtE,IAAXkB,EAAqB,+HACV,IAAXA,EAAqB,2KACnB,GAAN,OAAUA,EAAV,sDAA2BC,EAAQD,GAAnC,sICWWM,GAfE,SAAC,GAA0B,IAAzB5N,EAAwB,EAAxBA,OAAQ6N,EAAgB,EAAhBA,WACzB,OACE,oBACE5I,UAAS,wBAAmBjF,EAAS,QAAU,IAC/C8N,MAAO,CAACC,SAAU,SAAUvH,MAAM,GAAD,OAAKxG,EAAS,GAAK,QAAnB,UACjCkF,QAAS2I,KCoCAG,GAzCK,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAkBtC,OACE,iCACE,8BACGjD,OAAOC,KAAK8C,GAAS3H,KAAI,SAAApI,GAAG,OAC3B,8CACIkQ,MAAM,MACNlJ,QAAS+I,EAAQ/P,GAAKmQ,MAAS,kBAvBvBA,EAuBwCJ,EAAQ/P,GAAKmQ,UAtBnEH,EAAQG,OAASA,EACnBF,EAAO,2BAAID,GAAL,IAAcI,MAAyB,QAAlBJ,EAAQI,MAAkB,OAAS,SAE9DH,EAAO,CAACE,OAAMC,MAAO,SAJN,IAACD,IAwBJJ,EAAQ/P,GAAKmQ,MAAQ,CAAC9I,KAAM,WAHpC,cAIG0I,EAAQ/P,GAAK2C,MAjBFwN,EAkBEJ,EAAQ/P,GAAKmQ,KAjB/BA,IAASH,EAAQG,KACQ,QAAlBH,EAAQI,MACb,oBAAGrJ,UAAU,wBACb,oBAAGA,UAAU,0BAEZ,SAOQ/G,GAbI,IAACmQ,UCwBTE,GAhCG,SAAC,GAAqB,IAApB7P,EAAmB,EAAnBA,KAAMuP,EAAa,EAAbA,QAClBO,EAAgB,SAACC,EAAMC,GAC3B,GAAIT,EAAQS,GAAQC,UAAW,CAC7B,IAAMA,EAAYV,EAAQS,GAAQC,UAClC,MAAyB,oBAAdA,EACFA,EAAUF,GAEZR,EAAQS,GAAQC,UAEzB,OAAO/B,KAAExM,IAAIqO,EAAMR,EAAQS,GAAQL,OAGrC,OACE,iCACG3P,EAAK4H,KAAI,SAACmI,GAAD,OACR,8BACGvD,OAAOC,KAAK8C,GAAS3H,KAAI,SAAAoI,GAAM,OAC9B,8BACGF,EAAcC,EAAMC,IADdA,OAFJD,EAAKvM,WCfP0M,GCED,SAAC,GAAgD,IAA/ClQ,EAA8C,EAA9CA,KAAMuP,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,OAAQU,EAAc,EAAdA,SAC9C,OACE,wBAAO5J,UAAU,oBAAjB,SACG4J,GACD,uCACE,eAAC,GAAD,CAAkBZ,UAASC,UAASC,WACpC,eAAC,GAAD,CAAgBF,UAASvP,e,SCclBoQ,GApBI,SAAC,GAAU,IAAT/M,EAAQ,EAARA,GACbJ,EAAWwE,cACXnF,EAAY4D,a9BwC6B,SAAAvD,GAAK,OAAIA,EAAMO,YAAYZ,a8BvCpE8D,EAAOF,YAAY9C,EAAkBC,IAM3C,OAJAqE,qBAAU,WACRzE,EAASD,OACR,IAECV,EACK,aAGD,6BAAI8D,EAAKjE,QCmCJkO,GA7CI,SAAC,GAA0C,IAAzCzK,EAAwC,EAAxCA,MAAO6J,EAAiC,EAAjCA,OAAQD,EAAyB,EAAzBA,QAASL,EAAgB,EAAhBA,WACrCI,EAAU,CACdpN,KAAM,CACJwN,KAAM,OACNxN,KAAM,qBAEN8N,UAAW,SAACjK,GAAD,OACT,eAAC,KAAD,CAAMsK,GAAE,iBAAYtK,EAAKxC,KAAzB,SAAiCwC,EAAK7D,SAE1CkF,UAAW,CACTlF,KAAM,mDAEN8N,UAAW,SAACjK,GAAD,OAAU,eAAC,GAAD,CAAWqB,UAAWrB,EAAKqB,cAElDhB,WAAY,CACVlE,KAAM,yDACN8N,UAAW,SAACjK,GAAD,OAAU,eAAC,GAAD,CAAY3C,GAAI2C,EAAKK,eAE5C6B,kBAAmB,CAACyH,KAAM,oBAAqBxN,KAAM,oFACrD2E,KAAM,CAAC6I,KAAM,OAAQxN,KAAM,wCAC3BoO,SAAU,CACRZ,KAAM,WACNxN,KAAM,yDAEN8N,UAAW,SAACjK,GAAD,OACT,eAAC,GAAD,CAAU1E,OAAQ0E,EAAKuK,SAAUpB,WAAY,kBAAMA,EAAWnJ,EAAKxC,WAIzE,OACE,eAAC,GAAD,CAAYxD,KAAM4F,EAAO2J,UAASC,UAASC,YCtChCe,GCWO,WACpB,IAEA,EAAsC5E,mBAAS,GAA/C,oBAAOgC,EAAP,KAAoB6C,EAApB,KACA,EAAwC7E,qBAAxC,oBAAO8E,EAAP,KAAqBC,EAArB,KACA,EAA4B/E,mBAAS,CAAC+D,KAAM,OAAQC,MAAO,QAA3D,oBAAOgB,EAAP,KAAeC,EAAf,KACA,EAA4BjF,mBAAS,IAArC,oBAAOkF,EAAP,KAAeC,EAAf,KAEMC,EAAW9K,a7BwJe,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMvD,Y6BvJ/Ca,EAAcgD,ajC0BkB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYb,YiCzB3D4O,EAAqB/K,ajC0BoB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYZ,aiCzBpE2D,EAAgBC,a7BkKc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMzB,KAAKhG,U6B5J9D,GAJAuJ,qBAAU,WACR+I,EAAe,KACd,CAACC,EAAcI,KAEbE,EAAU,OAAO,6CAEtB,IA4CME,EAZc,WAClB,IAAMtL,EAAQoL,EAASrG,QAAO,SAAA3E,GAAI,OAAIA,EAAKxC,MAAQyC,KAEnD,OAAIyK,EACK9K,EAAM+E,QAAO,SAAA3E,GAAI,OAAIA,EAAKK,aAAeqK,EAAalN,OAE3DsN,EACKlL,EAAM+E,QAAO,SAAA3E,GAAI,OAAIA,EAAK7D,KAAKgP,cAAclC,SAAS6B,EAAOK,kBAE/DvL,EAGawL,GAIhBC,EC7ED,SAAkB9C,EAAOH,EAAYkD,GAC1C,IAAMC,GAAcnD,EAAa,GAAKkD,EACtC,OAAOpD,KAAEK,GAAOvF,MAAMuI,GAAYC,KAAKF,GAAc5F,QD2EjC+F,CAFAvD,KAAEjE,QAAQiH,EAAe,CAACN,EAAOjB,MAAO,CAACiB,EAAOhB,QAE1BhC,EAlErB,GAoEfF,EAAgBwD,EAAcxE,OAMpC,OAJKkB,EAAc,GAAOA,GAAeF,EAtEpB,EAsEmD,GACtE+C,EAAe1C,KAAK2D,MAAMhE,EAvEP,IA2EnB,uBAAKnH,UAAU,SAAf,UACGrD,IAAgB+N,GACjB,uBAAK1K,UAAU,0CAAf,UACE,eAAC,GAAD,CAAW+H,aAAcoC,EAAcnC,MAAOrL,EAAawL,aA/ClC,SAACqB,GAC9BY,EAAgBZ,GAChBgB,EAAU,OA8CN,yBAAQxK,UAAU,yBAAyBC,QAlC7B,WAClBmK,IACAI,EAAU,KAgCN,iEAGF,uBAAKxK,UAAU,qBAAf,UACE,eAAC,GAAD,CAAcmH,cAAeA,IAC7B,wBAAOjC,KAAK,OAAOC,MAAOoF,EAAQnF,SA5CnB,SAACM,GACpB8E,EAAU9E,EAAMC,OAAOR,OACvBiF,KA0C8DpK,UAAU,eAAeoL,YAAY,cAC9FjE,EAAgB,GACf,eAAC,GAAD,CAAY9H,MAAOyL,EACP5B,OAnDD,SAACD,GAClBqB,EAAUrB,IAmDQA,QAASoB,EACTzB,WAvEG,SAAChR,OAyElB,sBAAKoI,UAAU,gCAAf,SACE,eAAC,GAAD,CAAYmH,cAAeA,EACfC,aA7FC,EA8FDC,YAAaA,EACbC,aApEK,SAAC+D,GACxBnB,EAAemB,eEfJC,GApBK,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SACdlN,EAAWwE,cACXqK,EAAa5L,a/B+Kc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMvB,c+BvKtD,OANAqD,qBAAU,WACHoK,GACH7O,EAASqC,QAEV,IAEEwM,EAIE3B,EAHE,8CC2BI4B,GAzCK,SAAC,GAA6D,IAA5DvG,EAA2D,EAA3DA,MAAOE,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,SAAUqG,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,QAAS1P,EAAW,EAAXA,MAC9D2P,EAAiBC,MAAMC,QAAQH,IAAiC,kBAAZA,EAEtDA,EADAzF,OAAOC,KAAKwF,GAASrK,KAAI,SAAAzC,GAAC,MAAK,CAACqG,MAAOyG,EAAQ9M,GAAGqG,MAAOE,MAAOuG,EAAQ9M,GAAGuG,UAOzEK,EAAe,eAAiBxJ,EAAQ,cAAgB,IAE9D,OACE,uBAAKgE,UAAU,OAAf,UACE,wBAAOyF,QAAQ,qBAAqBzF,UAAU,aAA9C,SAA4DiF,IAC5D,0BAAQrJ,KAAK,aAAauJ,MAAOA,EAAOC,SATvB,SAACM,GACpBN,EAAS,CAACxJ,KAAM8J,EAAMC,OAAO/J,KAAMuJ,MAAOO,EAAMC,OAAOR,SAS7CnF,UAAWwF,EAAc1I,GAAG,qBAAqBgP,UAAQ,EADjE,UAEE,yBAAQ3G,MAAM,GAAG6B,UAAQ,EAAzB,SACGyE,IAGFE,GAAgBA,EAAatK,KAAI,SAAAzC,GAAC,OACjC,yBAAsBuG,MAAOvG,EAAEuG,MAA/B,SAAuCvG,EAAEqG,OAA5BrG,EAAEuG,aAIlBnJ,GAAS,sBAAKgE,UAAU,mBAAf,SACPhE,QCMM+P,GAhCI,SAAC,GAA6C,IAA5CnQ,EAA2C,EAA3CA,KAAMqJ,EAAqC,EAArCA,MAAOyG,EAA8B,EAA9BA,QAASvG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC1C4G,EAAe,SAACtG,GACpBN,EAAS,CAACxJ,KAAM8J,EAAMC,OAAO/J,KAAMuJ,MAAOO,EAAMC,OAAOR,SAGzD,OACE,uBAAKnF,UAAU,OAAf,UACE,wBAAOA,UAAU,aAAjB,SAA+BiF,IAE/B,+BACGyG,EAAQrK,KAAI,SAAAzC,GAAC,OACZ,uBAAkCoB,UAAU,+BAA5C,UACE,wBAAOpE,KAAMA,EAAMuJ,MAAOvG,EAAEuG,MAAOrI,GAAI8B,EAAEhD,KAAO,IAAMgD,EAAEuG,MAAO8G,QAASrN,EAAEuG,QAAUA,EAC7EC,SAAU4G,EACVhM,UAAU,mBAAmBkF,KAAK,UACzC,wBAAOO,QAAS7G,EAAEhD,KAAO,IAAMgD,EAAEuG,MAC1BnF,UAAU,mBADjB,SACqCpB,EAAEhD,SAL/BgD,EAAEhD,KAAO,IAAMgD,EAAEuG,gB,SCwBtB+G,GAlCU,SAAC,GAA6C,IAA5CR,EAA2C,EAA3CA,QAAS9P,EAAkC,EAAlCA,KAAMwJ,EAA4B,EAA5BA,SAAUH,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,MACnDwG,EAAiBC,MAAMC,QAAQH,IAAiC,kBAAZA,EAEtDA,EADAzF,OAAOC,KAAKwF,GAASrK,KAAI,SAAAzC,GAAC,MAAK,CAACqG,MAAOyG,EAAQ9M,GAAGhD,KAAMuJ,MAAOuG,EAAQ9M,GAAG3B,QAO9E,OACE,uBAAK+C,UAAU,OAAf,UACE,wBAAOA,UAAU,aAAjB,SAA+BiF,IAC/B,eAAC,KAAD,CACEkH,SAAO,EACPC,mBAAmB,EACnBC,aAAclH,EACdvJ,KAAMA,EACN8P,QAASC,EACT3L,UAAU,qBACVsM,gBAAgB,SAChBlH,SAfe,SAAC2B,GACpB3B,EAAS,CAACxJ,KAAMA,EAAMuJ,MAAO4B,WCmBlBwF,GA1BO,SAAC,GAA8C,IAA7C3Q,EAA4C,EAA5CA,KAAMuJ,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUwE,EAAqB,EAArBA,SAAU5N,EAAW,EAAXA,MAKjDwJ,EAAe,oBAAsBxJ,EAAQ,cAAgB,IAEnE,OACE,uBAAKgE,UAAU,kBAAf,UACE,wBAAOiM,QAAS9G,EAAOnF,UAAWwF,EAAcN,KAAK,WAAWC,MAAM,GAAGrI,GAAIlB,EAAMwJ,SARlE,SAACM,GACpBN,EAAS,CAACxJ,KAAMA,EAAMuJ,OAAQA,OAQ5B,wBAAOnF,UAAU,mBAAmByF,QAAS7J,EAA7C,SACGgO,IAEF5N,GAAS,sBAAKgE,UAAU,mBAAf,SAAmChE,QCD7CuK,GAAkB,CACtB3K,KAAM,CACJ4K,WAAY,CAAC5J,QAAS,0KAExBjD,MAAO,CACL6M,WAAY,CAAC5J,QAAS,wPACtB4P,QAAS,CAAC5P,QAAS,kHAErBhD,SAAU,CACR4M,WAAY,CAAC5J,QAAS,qLACtB6P,WAAY,CAAC7P,QAAS,yRACtB8P,UAAW,CAAC9P,QAAS,kOACrB+P,IAAK,CAAC/P,QAAS,mOAAgDuI,MAAO,IAExErF,WAAY,CACV0G,WAAY,CAAC5J,QAAS,yKAExBgQ,QAAS,CACPpG,WAAY,CAAC5J,QAAS,mbA+JXiQ,GA3JM,WACnB,IAAMnQ,EAAWwE,cACVtJ,EAAUgN,cAAVhN,OACP,EAAwByN,qBAAxB,oBAAO5L,EAAP,KAAaiN,EAAb,KACA,EAA4BrB,mBAAS,IAArC,oBAAOS,EAAP,KAAea,EAAf,KAEMmG,EAAcnN,apCgJkB,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMvD,SACzDM,EAAMiD,MAAMvD,SAASiB,MAAK,SAAAuC,GAAC,OAAIA,EAAErC,MAAQb,EAAMiD,MAAMzB,KAAKhG,UAC1D,QoChJI+E,EAAcgD,axCEkB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYb,YwCD3D8D,EAAsBD,axCEmB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYZ,awCDpEgR,EAAkBpQ,EAAY0E,KAAI,SAAArE,GAAC,MAAK,CAACiI,MAAOjI,EAAEpB,KAAMuJ,MAAOnI,EAAEC,QAEjE6D,EAAYnB,ajCFc,SAAAvD,GAAK,OAAIA,EAAM0E,UAAUhF,YiCGnDkR,EAAmBrN,ajCFoB,SAAAvD,GAAK,OAAIA,EAAM0E,UAAU/E,aiCGhEkR,EAAgBnM,EAAUO,KAAI,SAAAC,GAAC,MAAK,CAAC2D,MAAO3D,EAAE1F,KAAMuJ,MAAO7D,EAAErE,QAE7DQ,EAAUsC,cAEZnI,GAAUkV,EAAY7P,KAAOrF,IAAWkV,EAAY7P,KACtDQ,EAAQc,KAAR,iBAAuBuO,EAAY7P,IAAnC,UAGFkE,qBAAU,WACHvB,GAAwBoN,IAAoBF,GAC/CI,EAASJ,KAEV,CAAClN,EAAqBoN,IAEzB7L,qBAAU,WACR4E,MACC,CAACtM,IAEJ,IAAMyT,EAAW,SAACzN,GAChB,IAAMhG,EAAO,CACXmC,KAAM6D,EAAK7D,KACXjC,MAAO8F,EAAK9F,MAAQ8F,EAAK9F,MAAQ,GACjCC,SAAU6F,EAAK7F,SAAW6F,EAAK7F,SAAW,GAC1CkG,WAAYL,EAAKK,WAAaL,EAAKK,WAAa,GAChDqN,IAAK1N,EAAK0N,IAAM1N,EAAK0N,IAAM,OAC3BrM,UAAWrB,EAAKqB,UACZsM,EAAc3N,EAAKqB,WACnB,GACJ8L,SAASnN,EAAKmN,SAAUnN,EAAKmN,SAE/BlG,EAAQjN,IAGJ2T,EAAgB,SAACnM,GACrB,OAAOgM,EAAc7I,QAAO,SAAA9C,GAAC,OAAKL,EAAYyH,SAASpH,EAAE6D,WAGrD6G,EAAe,SAACjF,GACpBL,GAAQ,SAAAd,GAAI,kCACPA,GADO,mBAETmB,EAAMnL,KAAOmL,EAAM5B,YAIlBY,EAAW,WACf,IAAMD,EAASD,GAAUpM,EAAM8M,IAE/B,OADAI,EAAUb,GAC4B,IAA/BG,OAAOC,KAAKJ,GAAQK,QAGvBkH,EAAY,uCAAG,WAAO3H,GAAP,iBAAAnM,EAAA,yDACnBmM,EAAMoB,iBACUf,IAFG,iDAKbjF,EAAYrH,EAAKqH,UAAUO,KAAI,SAAAC,GAAC,OAAIA,EAAE6D,SACtCmI,EANa,2BAOd7T,GAPc,IAQjBqH,cAGFpE,EAASwC,GAAeoO,IAXL,2CAAH,sDAkBZ1G,EAA0C,IAA/BX,OAAOC,KAAKJ,GAAQK,OAErC,OACE,uBAAKnG,UAAU,iBAAf,UACE,0BAAQA,UAAU,kBACVC,QATG,WACbxC,EAAQc,KAAR,iBAAuB3G,KAOrB,UAEE,oBAAGoI,UAAU,qBAFf,oCAMA,sBAAKA,UAAU,kCAAf,SACIvG,EAEE,wBAAMoN,SAAUwG,EAAhB,UACA,eAAC,GAAD,CAAWzR,KAAK,OACLqJ,MAAM,qBACNE,MAAO1L,EAAKmC,KACZwJ,SAAU4G,EACVhQ,MAAO8J,EAAOlK,OACzB,eAAC,GAAD,CAAWA,KAAK,QACLqJ,MAAM,oGACNE,MAAO1L,EAAKE,MACZyL,SAAU4G,EACVhQ,MAAO8J,EAAOnM,QACzB,eAAC,GAAD,CAAWiC,KAAK,WACLqJ,MAAM,uCACNC,KAAK,WACLC,MAAO1L,EAAKG,SACZwL,SAAU4G,EACVhQ,MAAO8J,EAAOlM,WACzB,eAAC,GAAD,CAAauL,MAAO1L,EAAKqG,WACZ4L,QAASqB,EACT3H,SAAU4G,EACVP,cAAc,YACdzP,MAAO8J,EAAOhG,WACdmF,MAAM,4GACnB,eAAC,GAAD,CAAYE,MAAO1L,EAAK0T,IACZvR,KAAK,MACLwJ,SAAU4G,EACV/G,MAAM,sEACNyG,QAAS,CACP,CAAC9P,KAAM,OAAQuJ,MAAO,QACtB,CAACvJ,KAAM,SAAUuJ,MAAO,UACxB,CAACvJ,KAAM,QAASuJ,MAAO,YAErC,eAAC,GAAD,CAAkBA,MAAO1L,EAAKqH,UACZlF,KAAK,YACL8P,QAASuB,EACT7H,SAAU4G,EACV/G,MAAM,sGACxB,gBAAC,GAAD,CAAeE,MAAO1L,EAAKmT,QACZxH,SAAU4G,EACVpQ,KAAK,UACLI,MAAO8J,EAAO8G,QAH7B,gFAIc,0KAGd,yBAAQ1H,KAAK,SACL8B,UAAWJ,EACX5G,UAAU,gCAFlB,uBA7CA,mDCvGGuN,GAlBD,WACZ,MAAuB3I,cAAhBhN,EAAP,EAAOA,OAAQ4V,EAAf,EAAeA,KACT9N,EAAgBC,arC6Kc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMzB,KAAKhG,UqC3K9D,OACE,eAAC,GAAD,UACGA,EACG4V,EACE5V,IAAW8H,EACT,eAAC,GAAD,IACA,eAAC,IAAD,CAAUqK,GAAE,iBAAYrK,EAAZ,WACd,eAAC,GAAD,CAAU9H,OAAQA,IACpB,eAAC,GAAD,OCyBK6V,GA1CI,WACjB,MAA0BpI,oBAAS,GAAnC,oBAAOqI,EAAP,KAAeC,EAAf,KACMb,EAAcnN,atCoLkB,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMvD,SACzDM,EAAMiD,MAAMvD,SAASiB,MAAK,SAAAuC,GAAC,OAAIA,EAAErC,MAAQb,EAAMiD,MAAMzB,KAAKhG,UAC1D,QsClLF,OAAKkV,EAUH,uBAAK9M,UAAU,WACVC,QAbY,kBAAM0N,GAAQ,SAAC/H,GAAD,OAAWA,MAY1C,UAEE,uBAAK5F,UAAU,gDAAf,UACE,sBAAKA,UAAU,OAAf,SACG8M,EAAYlR,OAEf,sBAAKsE,IAAK4M,EAAY3M,MACjBH,UAAU,gCACVK,IAAI,aACJ+C,OAAO,UAGd,uBAAKpD,UAAW,uBAAyB0N,EAAS,QAAU,IAAK7E,MAAO,CAAC+E,MAAO,GAAhF,UACE,eAAC,KAAD,CAAM7D,GAAE,iBAAY+C,EAAY7P,KAC1B+C,UAAU,gBADhB,qBAIA,eAAC,KAAD,CAAM+J,GAAG,UACH/J,UAAU,gBADhB,2BAzBF,eAAC,KAAD,CAAM+J,GAAG,UACH/J,UAAU,WADhB,sBCgCS6N,GAvCA,WACb,IAAMhQ,EAAa8B,avC8Kc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMxB,cuC5KtD,OACE,uBAAKmC,UAAU,sBAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,sBAAIA,UAAU,MAAd,UACE,qBAAIA,UAAU,WAAd,SACE,eAAC,KAAD,CAAS+J,GAAG,IAAI+D,OAAK,EACZ9N,UAAU,WACV+N,YAAa,CAACC,WAAY,QAFnC,oBAODnQ,GACD,qBAAImC,UAAU,WAAd,SACE,eAAC,KAAD,CAAS+J,GAAG,SACH/J,UAAU,WACV+N,YAAa,CAACC,WAAY,QAFnC,0BASN,sBAAKhO,UAAU,SAAf,SACGnC,EACG,eAAC,GAAD,IACA,eAAC,KAAD,CAASkM,GAAG,SACH/J,UAAU,WADnB,yB,oCC4CGiO,GAxEK,WAClB,IAAMC,EACE,cADFA,EAEK,aAFLA,EAGK,QAHLA,EAIG,iBAGT,EAA0B7I,mBAAS,MAAnC,oBAAOrJ,EAAP,KAAcmS,EAAd,KACA,EAA4B9I,mBAAS6I,GAArC,oBAAOnT,EAAP,KAAeqT,EAAf,KACA,EAAgC/I,mBAAS,GAAzC,oBAAOgJ,EAAP,KAAiBC,EAAjB,KACA,EAA0BjJ,mBAAS,GAAnC,oBAAOkJ,EAAP,KAAcC,EAAd,KAEArN,qBAAU,WACJnF,GACFhB,IAAMC,KAAKe,KAEZ,CAACA,IAEJ,IAAMyS,EAAe9R,GAAYwJ,OAASrF,GAAUqF,OAAS9G,GAAM8G,OAE7DuI,EAAiB,WACrBF,GAAS,SAAC5I,GACR,OAAOA,EAAO,MAvBM,4CA8CxB,gDAAArM,EAAA,8EAEoBoD,IAFpB,gEAEeK,EAFf,iBAGY9B,EAAYE,IAAI,cAAgB4B,EAAEC,IAAKD,GAHnD,OAIM0R,IAJN,6JAOoB5N,IAPpB,kEAOeQ,EAPf,kBAQYpG,EAAYE,IAAI,WAAakG,EAAErE,IAAKqE,GARhD,QASMoN,IATN,gKAYoBrP,IAZpB,kEAYeC,EAZf,kBAaYpE,EAAYE,IAAI,QAAUkE,EAAErC,IAAKqC,GAb7C,QAeMoP,IAfN,mMAkBIP,GAAS,eAAIvT,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,SAC1CwR,EAAUF,GAnBd,oGA9CwB,sBAqExB,OA3BA/M,qBAAU,YAfa,WACP,IAAVoN,GAAexT,IAAWmT,GAC5BE,EAAUF,GAGZ,IAAMS,EAAcnH,KAAK2D,MAAOoD,EAAQE,EAAgB,KACpDJ,EAAWM,GACbL,GAAY,kBAAMK,KAGA,MAAhBA,GACFP,EAAUF,GAKZU,KACC,CAACL,IAyBG,CAACvS,QAAO6S,WArES,2CAqEGR,WAAUtT,WC7CxB+T,GA3BF,SAAC,GAAc,EAAbC,QAAc,IAC3B,EAA8Cd,KAAvCjS,EAAP,EAAOA,MAAO6S,EAAd,EAAcA,WAAYR,EAA1B,EAA0BA,SAAUtT,EAApC,EAAoCA,OAKpC,OACE,uBAAKiF,UAAU,iBAAf,UACE,uCACA,sKACA,yBAAQA,UAAU,0BACVC,QARQ,WAClB4O,KAME,8GAIA,gCACE,2CAAa9T,KACb,6CAAesT,KACdrS,GAAS,0CAAYA,YCbxBuK,GAAkB,CACtB5M,MAAO,CACL6M,WAAY,CAAC5J,QAAS,wPACtB4P,QAAS,CAAC5P,QAAS,kHAErBhD,SAAU,CACR4M,WAAY,CAAC5J,QAAS,qLACtB6P,WAAY,CAAC7P,QAAS,yRACtB8P,UAAW,CAAC9P,QAAS,kOACrB+P,IAAK,CAAC/P,QAAS,mOAAgDuI,MAAO,KAyE3D6J,GArEG,WAChB,IAAMtS,EAAWwE,cACjB,EAAwBmE,mBAAS,CAAC1L,MAAO,GAAIC,SAAU,GAAIqV,QAAQ,IAAnE,oBAAOxV,EAAP,KAAaiN,EAAb,KACA,EAA4BrB,mBAAS,IAArC,oBAAOS,EAAP,KAAea,EAAf,KACMuI,EAAavP,a1CwKa,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMrD,S0CtK/C4K,EAA0C,IAA/BX,OAAOC,KAAKJ,GAAQK,OAE/B1I,EAAUsC,cAEViM,EAAe,SAACjF,GACpBL,GAAQ,SAAAd,GAAI,kCACPA,GADO,mBAETmB,EAAMnL,KAAOmL,EAAM5B,YAIxBhE,qBAAU,WACR4E,MACC,CAACtM,IAEJ,IAAMsM,EAAW,WACf,IAAMD,EAASD,GAAUpM,EAAM8M,IAE/B,OADAI,EAAUb,GAC4B,IAA/BG,OAAOC,KAAKJ,GAAQK,QAY7B,OACE,wBAAMU,SAVa,SAACnB,GAAW,IAAD,MAG9B,GAFAA,EAAMoB,iBACUf,IAChB,CAEA,IAAMoJ,EAAQ,oBAAG1R,EAAQ2R,SAAShT,aAApB,iBAAG,EAAwBiT,YAA3B,aAAG,EAA8BC,gBAAjC,QAA6C,IAC3D5S,E1CoEiB,SAAC,GAAD,IAAEpD,EAAF,EAAEA,QAAS6V,EAAX,EAAWA,SAAX,8CAAyB,WAAMzS,GAAN,+BAAAnD,EAAA,6DACrCI,EAAmBL,EAAnBK,MAAOC,EAAYN,EAAZM,SACd8C,EAAS0B,KAFmC,kBAIvBhF,EAAYM,MAAM,CAACC,QAAOC,aAJH,OAIpCH,EAJoC,OAK1CjC,EAAoBC,SAASgC,GAC7BiD,EAASyB,EAAmB,CAC1BvG,OAAQ6B,EAAK7B,UAEf6F,EAAQc,KAAK4Q,GAT6B,oDAWlB,KAAIvU,SAASnB,KAAKuC,MAAnCuT,EAXmC,EAWnCA,KAAM3S,EAX6B,EAW7BA,QACA,MAAT2S,GACIC,EAAe7R,EAAkBf,GACzCF,EAAS2B,EAAkBmR,KAEzB9S,EAAS2B,GAAkB,eAAIzD,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAhBpB,0DAAzB,sD0CpERlD,CAAM,CAACJ,QAASG,EAAM0V,gBAI/B,UACE,eAAC,GAAD,CAAWvT,KAAK,QACLqJ,MAAM,oGACNE,MAAO1L,EAAKE,MACZyL,SAAU4G,EACVhQ,MAAO8J,EAAOnM,QACzB,eAAC,GAAD,CAAWiC,KAAK,WACLqJ,MAAM,uCACNC,KAAK,WACLC,MAAO1L,EAAKG,SACZwL,SAAU4G,EACVhQ,MAAO8J,EAAOlM,WACzB,eAAC,GAAD,CAAeuL,MAAO1L,EAAKwV,OACZ7J,SAAU4G,EACVpQ,KAAK,SAFpB,4HAMCsT,GACD,oBAAGlP,UAAU,cAAb,SACGkP,IAGH,yBAAQhK,KAAK,SACL8B,UAAWJ,EACX5G,UAAU,gCAFlB,wBCpEAuG,GAAkB,CACtB5M,MAAO,CACL6M,WAAY,CAAC5J,QAAS,wPACtB4P,QAAS,CAAC5P,QAAS,kHAErBhB,KAAM,CACJ4K,WAAY,CAAC5J,QAAS,yKACtB+P,IAAK,CAAC/P,QAAS,iNAA6CuI,MAAO,IAErEvL,SAAU,CACR4M,WAAY,CAAC5J,QAAS,qLACtB6P,WAAY,CAAC7P,QAAS,yRACtB8P,UAAW,CAAC9P,QAAS,kOACrB+P,IAAK,CAAC/P,QAAS,mOAAgDuI,MAAO,IAExErF,WAAY,CACV0G,WAAY,CAAC5J,QAAS,yKAExBgQ,QAAS,CACPpG,WAAY,CAAC5J,QAAS,mbAqHX6S,GAjHM,WACnB,IAAM/S,EAAWwE,cACjB,EAAwBmE,mBAAS,MAAjC,oBAAO5L,EAAP,KAAaiN,EAAb,KACA,EAA4BrB,mBAAS,IAArC,oBAAOS,EAAP,KAAea,EAAf,KAEMhK,EAAcgD,a/CMkB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYb,Y+CL3D8D,EAAsBD,a/CMmB,SAAAvD,GAAK,OAAIA,EAAMO,YAAYZ,a+CLpEgR,EAAkBpQ,EAAY0E,KAAI,SAAArE,GAAC,MAAK,CAACiI,MAAOjI,EAAEpB,KAAMuJ,MAAOnI,EAAEC,QAEjE6D,EAAYnB,axCEc,SAAAvD,GAAK,OAAIA,EAAM0E,UAAUhF,YwCDnDkR,EAAmBrN,axCEoB,SAAAvD,GAAK,OAAIA,EAAM0E,UAAU/E,awCDhEkR,EAAgBnM,EAAUO,KAAI,SAAAC,GAAC,MAAK,CAAC2D,MAAO3D,EAAE1F,KAAMuJ,MAAO7D,EAAErE,QAE7D2J,EAA0C,IAA/BX,OAAOC,KAAKJ,GAAQK,OAErChF,qBAAU,WACHvB,GAAwBoN,GAC3BtG,EAAQ,CACN/M,MAAO,GACPC,SAAU,GACVkG,WAAY,GACZqN,IAAK,OACLvR,KAAM,GACNkF,UAAW,GACX8L,SAAS,MAGZ,CAAChN,EAAqBoN,IAEzB7L,qBAAU,WACR4E,MACC,CAACtM,IAEJ,IAAMuS,EAAe,SAACjF,GACpBL,GAAQ,SAAAd,GAAI,kCACPA,GADO,mBAETmB,EAAMnL,KAAOmL,EAAM5B,YAIlBY,EAAW,WACf,IAAMD,EAASD,GAAUpM,EAAM8M,IAE/B,OADAI,EAAUb,GAC4B,IAA/BG,OAAOC,KAAKJ,GAAQK,QAY7B,OAAK1M,GAAQmG,GAAuBoN,EAC3B,6CAIP,wBAAMnG,SAda,SAACnB,GAGpB,GAFAA,EAAMoB,iBACUf,IAChB,CACA,I3CsBmBzM,E2CtBbgU,EAAO,2BAAO7T,GAAP,IAAaqH,UAAWrH,EAAKqH,UAAUO,KAAI,SAAAC,GAAC,OAAIA,EAAE6D,WAE/DzI,G3CoBmBpD,E2CpBHgU,E3CoBE,uCAAa,WAAM5Q,GAAN,mBAAAnD,EAAA,6DACjCmD,EAAS0B,KADwB,kBAGZhF,EAAYC,SAASC,GAHT,OAGzBG,EAHyB,OAI/BjC,EAAoBC,SAASgC,GAC7BiD,EAASyB,EAAmB,CAC1BvG,OAAQ6B,EAAK7B,UAEf6F,EAAQc,KAAK,UARkB,kDAU/B7B,EAAS2B,GAAkB,eAAIzD,gBAAJ,mBAAcnB,YAAd,eAAoBuC,QAAS,KAAIY,UAV7B,0DAAb,0D2CZlB,UACE,eAAC,GAAD,CAAWhB,KAAK,QACLqJ,MAAM,oGACNE,MAAO1L,EAAKE,MACZyL,SAAU4G,EACVhQ,MAAO8J,EAAOnM,QACzB,eAAC,GAAD,CAAWiC,KAAK,OACLqJ,MAAM,qBACNE,MAAO1L,EAAKmC,KACZwJ,SAAU4G,EACVhQ,MAAO8J,EAAOlK,OACzB,eAAC,GAAD,CAAWA,KAAK,WACLqJ,MAAM,uCACNC,KAAK,WACLC,MAAO1L,EAAKG,SACZwL,SAAU4G,EACVhQ,MAAO8J,EAAOlM,WACzB,eAAC,GAAD,CAAauL,MAAO1L,EAAKqG,WACZ4L,QAASqB,EACT3H,SAAU4G,EACVP,cAAc,YACdzP,MAAO8J,EAAOhG,WACdmF,MAAM,4GACnB,eAAC,GAAD,CAAYE,MAAO1L,EAAK0T,IACZvR,KAAK,MACLwJ,SAAU4G,EACV/G,MAAM,sEACNyG,QAAS,CACP,CAAC9P,KAAM,OAAQuJ,MAAO,QACtB,CAACvJ,KAAM,SAAUuJ,MAAO,UACxB,CAACvJ,KAAM,QAASuJ,MAAO,YAErC,eAAC,GAAD,CAAkBvJ,KAAK,YACL8P,QAASuB,EACT7H,SAAU4G,EACV/G,MAAM,sGACxB,gBAAC,GAAD,CAAeE,MAAO1L,EAAKmT,QACZxH,SAAU4G,EACVpQ,KAAK,UACLI,MAAO8J,EAAO8G,QAH7B,gFAIc,0KAGd,yBAAQ1H,KAAK,SACL8B,UAAWJ,EACX5G,UAAU,gCAFlB,wBC/FS0P,GAvCD,WACZ,IAAOxK,EAAQN,cAARM,KACP,EAAgCG,mBAAkB,aAATH,EAAsBA,EAAO,SAAtE,oBAAOyK,EAAP,KAAiBC,EAAjB,KAEMC,EAAiB,SAAC7W,GACtB4W,GAAY,SAAAhK,GAAI,MAAa,aAATA,EAAsB,QAAU,eAGtD,OACE,sBAAK5F,UAAU,iBAAf,SACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,SACgB,aAAb2P,EACG,uCACA,qBAAI3P,UAAU,OAAd,sBACA,eAAC,GAAD,IACA,2DACE,oBAAGM,KAAK,SACLuI,MAAO,CAACtH,MAAO,aAAcyM,WAAY,QACzC/N,QAAS4P,EAFZ,0BAIF,uCACA,qBAAI7P,UAAU,OAAd,mBACA,eAAC,GAAD,IACA,wDACE,oBAAGM,KAAK,SACLuI,MAAO,CAACtH,MAAO,aAAcyM,WAAY,QACzC/N,QAAS4P,EAFZ,kC,qCCADC,GAvBQ,SAAC,GAA+C,IAAnCC,EAAkC,EAA7CrG,UAAsBE,EAAuB,EAAvBA,SAAaoG,EAAU,mBAC9DnS,EAAa8B,a7C6Kc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMxB,c6C3KtD,OAAQ,eAAC,IAAD,2BAAWmS,GAAX,IAAiBC,OAAQ,SAACC,GAChC,OAAKrS,EAQEkS,EAAY,eAACA,EAAD,eAAeG,IAAYtG,EAPrC,eAAC,IAAD,CAAUG,GAAI,CACnBuF,SAAU,SACVlT,MAAO,CACLiT,KAAMa,EAAMd,kBCDPe,GAVA,WACb,IAAMzT,EAAWwE,cAMjB,OAJAC,qBAAU,WACRzE,E9CuIkB,uCAAM,WAAMA,GAAN,SAAAnD,EAAA,sDAC1B/B,EAAoBgB,iBACpBkE,EAASoC,MACTrB,EAAQc,KAAK,KAHa,2CAAN,yD8CtIjB,IAEK,8CCoBK6R,GAxBG,SAAC,GAAgB,IAAfxG,EAAc,EAAdA,SACZlN,EAAWwE,cACXrD,EAAa8B,a/C4Kc,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMxB,c+C3KhDwS,EAAiB1Q,a/CqLkB,SAAAvD,GAAK,OAAIA,EAAMiD,MAAMtD,a+C3K9D,OARAoF,qBAAU,WACRzE,EAASmE,MACTnE,EAASD,KACLoB,GACFnB,EAASqC,QAEV,CAAClB,IAEAwS,EACK,6CAGFzG,GCMM0G,GAjBH,WACV,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOlH,KAAK,gBAAZ,SAA4B,eAAC,GAAD,MAC5B,eAAC,IAAD,CAAOA,KAAK,UAAZ,SAAsB,eAAC,GAAD,MACtB,eAAC,IAAD,CAAOA,KAAK,uBAAZ,SAAmC,eAAC,GAAD,MACnC,eAAC,GAAD,CAAgBA,KAAK,kBAArB,SAAuC,eAAC,GAAD,MACvC,eAAC,IAAD,CAAOA,KAAK,IAAI0E,OAAK,EAArB,SAAsB,eAAC,GAAD,MACtB,eAAC,IAAD,CAAU/D,GAAG,SAEf,eAAC,IAAD,Q,SCnBAwG,GAAcC,aAAgB,CAClC1P,UAAWC,GACXpE,YAAaO,EACbmC,MAAOE,GACPoF,SAAUF,KASGgM,ICJTC,GDFN,WACE,OAAOC,YAAe,CACpBxT,QAASoT,KCACE,GAEdG,IAASX,OACP,eAAC,IAAMY,WAAP,UACE,eAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAQjT,QAASA,EAAjB,SACE,eAAC,GAAD,UAINqT,SAASC,eAAe,SAM1Bpa,K","file":"static/js/main.368688f9.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","const ACCESS_KEY = 'jwt-access-token'\nconst REFRESH_KEY = 'jwt-refresh-token'\nconst EXPIRES_KEY = 'jwt-expires'\nconst USERID_KEY = 'user-local-id'\n\nexport function setToken({refreshToken, accessToken, userId, expiresIn = 3600}) {\n  const expiresDate = new Date().getTime() + expiresIn * 1000\n  localStorage.setItem(ACCESS_KEY, accessToken)\n  localStorage.setItem(USERID_KEY, userId)\n  localStorage.setItem(REFRESH_KEY, refreshToken)\n  localStorage.setItem(EXPIRES_KEY, expiresDate)\n}\n\nexport function getAccessToken() {\n  return localStorage.getItem(ACCESS_KEY)\n}\n\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY)\n}\n\nexport function getExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY)\n}\n\nexport function getUserId() {\n  return localStorage.getItem(USERID_KEY)\n}\n\nexport function removeAuthData() {\n  localStorage.removeItem(ACCESS_KEY)\n  localStorage.removeItem(USERID_KEY)\n  localStorage.removeItem(REFRESH_KEY)\n  localStorage.removeItem(EXPIRES_KEY)\n}\n\nconst localStorageService = {\n  setToken,\n  getAccessToken,\n  getRefreshToken,\n  getExpiresDate,\n  getUserId,\n  removeAuthData\n}\n\nexport default localStorageService\n","import axios from 'axios'\nimport localStorageService from './localStorage.service'\nimport config from '../config.json'\n\nconst httpAuth = axios.create({\n  baseURL: config.apiEndpoint + '/auth',\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY\n  }\n})\n\nconst authService = {\n  register: async (payload) => {\n    const {data} = await httpAuth.post('/signUp', payload)\n    return data\n  },\n  login: async ({email, password}) => {\n    const {data} = await httpAuth.post('/signInWithPassword',\n      {email, password, returnSecureToken: true})\n    return data\n  },\n  refresh: async () => {\n    const {data} = await httpAuth.post('/token', {\n      grant_type: 'refresh_token',\n      refresh_token: localStorageService.getRefreshToken()\n    })\n    return data\n  }\n  // todo\n  // updateAccounts: async (email, password) => {\n  //   const {data} = await httpAuth.post('/update',\n  //     {\n  //       idToken: localStorageService.getAccessToken(),\n  //       email,\n  //       password,\n  //       returnSecureToken: true\n  //     })\n  //   return data\n  // }\n}\n\nexport default authService\n","import axios from 'axios'\n// import * as Sentry from '@sentry/react'\nimport { toast } from 'react-toastify'\nimport configFile from '../config.json'\nimport localStorageService from './localStorage.service'\nimport authService from './auth.service'\n\nconst http = axios.create({\n  baseURL: configFile.apiEndpoint\n})\n\nhttp.interceptors.request.use(\n  async function (config) {\n    const expiresDate = localStorageService.getExpiresDate()\n    const refreshToken = localStorageService.getRefreshToken()\n\n    if (refreshToken && expiresDate > Date.now()) {\n      const data = await authService.refresh()\n      localStorageService.setToken(data)\n    } else {\n      localStorageService.removeAuthData()\n    }\n\n    const accessToken = localStorageService.getAccessToken()\n    if (accessToken) {\n      config.headers = {\n        ...config.headers,\n        Authorization: 'Bearer ' + accessToken\n      }\n    }\n\n    return config\n  }, function (err) {\n    return Promise.reject(err)\n  }\n)\n\nhttp.interceptors.response.use(res => {\n    res.data = {content: res.data}\n    return res\n  },\n  err => {\n    const expectedError = err.response && err.response.status >= 400 && err.response.status < 500\n    if (!expectedError) {\n      toast.info('Unexpected error. Try it later.')\n    }\n    return Promise.reject(err)\n  }\n)\n\nconst httpService = {\n  get: http.get,\n  post: http.post,\n  put: http.put,\n  patch: http.patch,\n  delete: http.delete\n}\n\nexport default httpService\n","import httpService from './http.service'\n\nconst professionEndpoint = 'profession/'\n\nconst professionService = {\n  get: async () => {\n    const {data} = await httpService.get(professionEndpoint)\n    return data\n  }\n}\n\nexport default professionService\n","function isOutdated(date) {\n  return Date.now() > (date + 10 * 60 * 1000)\n}\n\nexport default isOutdated\n","import { createSlice } from '@reduxjs/toolkit'\nimport { toast } from 'react-toastify'\n\nimport professionService from '../services/profession.service'\nimport isOutdated from '../utils/isOutdated'\n\nconst initialState = {\n  entities: null,\n  isLoading: true,\n  error: null,\n  lastFetch: null\n}\n\nconst professionsSlice = createSlice({\n  name: 'professions',\n  initialState,\n  reducers: {\n    professionsRequested(state) {\n      state.isLoading = true\n    },\n    professionsReceived(state, action) {\n      state.entities = action.payload\n      state.isLoading = false\n      state.lastFetch = Date.now()\n    },\n    professionsRequestFailed(state, action) {\n      state.error = action.payload\n      state.isLoading = false\n      toast.info(state.error)\n    }\n  }\n})\n\nconst {professionsRequested, professionsReceived, professionsRequestFailed} = professionsSlice.actions\n\nexport const loadProfessionsList = () => async (dispatch, state) => {\n  if (isOutdated(state().professions.lastFetch)) {\n    dispatch(professionsRequested())\n    try {\n      const {content} = await professionService.get()\n      dispatch(professionsReceived(content))\n    } catch (err) {\n      dispatch(professionsRequestFailed(err.response?.data?.error || err.message))\n    }\n  }\n}\n\nexport const getProfessionsList = () => state => state.professions.entities\nexport const getProfessionsLoadingStatus = () => state => state.professions.isLoading\nexport const getProfessionById = (id) => state => {\n  if (state.professions.entities) {\n    return state.professions.entities.find(p => (p._id === id))\n  }\n  return {}\n}\n\nconst {reducer: professionsReducer} = professionsSlice\n\nexport default professionsReducer\n","import httpService from './http.service'\nimport localStorageService from './localStorage.service'\n\nconst userEndpoint = '/user/'\n\nconst userService = {\n  get: async () => {\n    const {data} = await httpService.get(userEndpoint)\n    return data\n  },\n\n  create: async (payload) => {\n    const {data} = await httpService.put(userEndpoint + payload._id, payload)\n    return data\n  },\n\n  update: async (id, payload) => {\n    const {data} = await httpService.patch(userEndpoint + id, payload)\n    return data\n  },\n\n  getById: async (id) => {\n    const {data} = await httpService.get(userEndpoint + id)\n    return data\n  },\n\n  getCurrentUser: async () => {\n    const {data} = await httpService.get(userEndpoint + localStorageService.getUserId())\n    return data\n  }\n}\n\nexport default userService\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history\n","\nfunction generateAuthError(message) {\n  switch (message) {\n    case 'INVALID_PASSWORD':\n      return 'Неверный пароль'\n    case 'EMAIL_NOT_FOUND':\n      return 'Пользователь с таким EMAIL не найден'\n    case 'EMAIL_EXISTS':\n      return 'Пользователь с таким EMAIL уже существует'\n    default :\n      return 'Пароль введен много раз. Попробуйте позже'\n  }\n}\n\nexport default generateAuthError\n","import { createSlice, createAction } from '@reduxjs/toolkit'\nimport { toast } from 'react-toastify'\n\nimport userService from '../services/user.service'\nimport authService from '../services/auth.service'\nimport localStorageService from '../services/localStorage.service'\nimport history from '../utils/history'\nimport generateAuthError from '../utils/generateAuthError'\n\nconst initialState = localStorageService.getAccessToken()\n  ? {\n    entities: null,\n    isLoading: true,\n    error: null,\n    auth: {userId: localStorageService.getUserId()},\n    isLoggedIn: true,\n    dataLoaded: false\n  }\n  : {\n    entities: null,\n    isLoading: false,\n    error: null,\n    auth: null,\n    isLoggedIn: false,\n    dataLoaded: false\n  }\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    usersRequested(state) {\n      state.isLoading = true\n    },\n    usersReceived(state, action) {\n      state.entities = action.payload\n      state.isLoading = false\n      state.dataLoaded = true\n    },\n    usersRequestFailed(state, action) {\n      state.error = action.payload\n      state.isLoading = false\n      toast.info(state.error)\n    },\n    authRequestSuccess(state, action) {\n      state.auth = action.payload\n      state.isLoggedIn = true\n    },\n    authRequested(state) {\n      state.error = null\n    },\n    authRequestFailed(state, action) {\n      state.error = action.payload\n      toast.info(state.error)\n    },\n    userCreated(state, action) {\n      state.entities.push(action.payload)\n    },\n    userCreateFailed(state, action) {\n      state.error = action.payload\n      toast.info(state.error)\n    },\n    userUpdated(state, action) {\n      const idx = state.entities.findIndex(i => i._id === localStorageService.getUserId())\n      state.entities[idx] = {...state.entities[idx], ...action.payload}\n    },\n    userUpdateFailed(state, action) {\n      state.error = action.payload\n      toast.info(state.error)\n    },\n    userLoggedOut(state) {\n      state.entities = null\n      state.auth = null\n      state.isLoggedIn = false\n      state.dataLoaded = false\n    }\n  }\n})\n\nconst {\n  usersRequested,\n  usersReceived,\n  usersRequestFailed,\n  authRequested,\n  authRequestSuccess,\n  authRequestFailed,\n  // userCreated,\n  // userCreateFailed,\n  userUpdated,\n  userUpdateFailed,\n  userLoggedOut\n} = usersSlice.actions\n\n// for APP.JS and USERS.JSX or APPLOADER.JSX and USERSLOADER.JSX\nexport const loadUsersList = () => async (dispatch) => {\n  dispatch(usersRequested())\n  try {\n    const {content} = await userService.get()\n    dispatch(usersReceived(content))\n  } catch (err) {\n    dispatch(usersRequestFailed(err.response?.data?.error || err.message))\n  }\n}\n\n// AUTH\n// const userCreateRequested = createAction('users/userCreateRequested')\nconst userUpdateRequested = createAction('users/userUpdateRequested')\n\nexport const signUp = (payload) => async dispatch => {\n  dispatch(authRequested())\n  try {\n    const data = await authService.register(payload)\n    localStorageService.setToken(data)\n    dispatch(authRequestSuccess({\n      userId: data.userId\n    }))\n    history.push('/users')\n  } catch (err) {\n    dispatch(authRequestFailed(err.response?.data?.error || err.message))\n  }\n}\n\nexport const login = ({payload, redirect}) => async dispatch => {\n  const {email, password} = payload\n  dispatch(authRequested())\n  try {\n    const data = await authService.login({email, password})\n    localStorageService.setToken(data)\n    dispatch(authRequestSuccess({\n      userId: data.userId\n    }))\n    history.push(redirect)\n  } catch (err) {\n    const {code, message} = err.response.data.error\n    if (code === 400) {\n      const errorMessage = generateAuthError(message)\n    dispatch(authRequestFailed(errorMessage))\n    } else {\n      dispatch(authRequestFailed(err.response?.data?.error || err.message))\n    }\n  }\n}\n\nexport const logout = () => async dispatch => {\n  localStorageService.removeAuthData()\n  dispatch(userLoggedOut())\n  history.push('/')\n}\n\nexport const updateUserData = (payload) => async dispatch => {\n  dispatch(authRequested())\n  try {\n    dispatch(updateUser(localStorageService.getUserId(), payload))\n  } catch (err) {\n    dispatch(authRequestFailed(err.response?.data?.error || err.message))\n  }\n}\n\nfunction updateUser(id, payload) {\n  return async dispatch => {\n    dispatch(userUpdateRequested())\n    try {\n      const {content} = await userService.update(id, payload)\n      dispatch(userUpdated(content))\n      history.push(`/users/${id}`)\n    } catch (err) {\n      dispatch(userUpdateFailed(err.response?.data?.error || err.message))\n    }\n  }\n}\n\n// SELECTORS\nexport const getUsersList = () => state => state.users.entities\n\nexport const getUserById = (id) => state => {\n  if (state.users.entities) {\n    return state.users.entities.find(u => u._id === id)\n  }\n  return {}\n}\n\nexport const getIsLoggedIn = () => state => state.users.isLoggedIn\n\nexport const getDataStatus = () => state => state.users.dataLoaded\n\nexport const getCurrentUserId = () => state => state.users.auth.userId\n\nexport const getCurrentUserData = () => state => state.users.entities\n  ? state.users.entities.find(u => u._id === state.users.auth.userId)\n  : null\n\nexport const getUsersLoadingStatus = () => state => state.users.isLoading\n\nexport const getAuthError = () => state => state.users.error\n\nconst {reducer: usersReducer} = usersSlice\nexport default usersReducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { getProfessionById, getProfessionsLoadingStatus } from '../../../store/professions'\nimport { getCurrentUserId } from '../../../store/users'\n\nconst UserCardInfo = ({user}) => {\n  const currentUserId = useSelector(getCurrentUserId())\n  const professionIsLoading = useSelector(getProfessionsLoadingStatus())\n  const prof = useSelector(getProfessionById(user.profession))\n  const history = useHistory()\n\n  const handleButton = () => {\n    history.push(`/users/${user._id}/edit`)\n  }\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n\n          {user._id === currentUserId &&\n          <a className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n             onClick={handleButton}>\n            <i className=\"bi bi-gear\"/>\n          </a>}\n\n          <img src={user.image}\n               className=\"rounded-circle\" width=\"150\" alt=\"Face\"/>\n\n          <div className=\"mt-3\">\n            <h4>\n              {user.name}\n            </h4>\n            <p className=\"text-secondary mb-1\">\n              {!professionIsLoading && prof?.name}\n            </p>\n            <div className=\"text-muted\">\n              <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"/>\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"/>\n              <span className=\"ms-2\">\n                {user.rate}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nUserCardInfo.propTypes = {\n  user: PropTypes.object\n}\n\nexport default UserCardInfo\n","import httpService from './http.service'\n\nconst qualityEndpoint = 'quality/'\n\nconst qualityService = {\n  get: async () => {\n    const {data} = await httpService.get(qualityEndpoint)\n    return data\n  }\n}\n\nexport default qualityService\n","import { createSlice } from '@reduxjs/toolkit'\nimport { toast } from 'react-toastify'\n\nimport qualityService from '../services/quality.service'\nimport isOutdated from '../utils/isOutdated'\n\nconst initialState = {\n  entities: null,\n  isLoading: true,\n  error: null,\n  lastFetch: null\n}\n\nconst qualitiesSlice = createSlice({\n  name: 'qualities',\n  initialState,\n  reducers: {\n    qualitiesRequested(state) {\n      state.isLoading = true\n    },\n    qualitiesReceived(state, action) {\n      state.entities = action.payload\n      state.isLoading = false\n      state.lastFetch = Date.now()\n    },\n    qualitiesRequestFailed(state, action) {\n      state.error = action.payload\n      state.isLoading = false\n      toast.info(state.error)\n    }\n  }\n})\n\nconst {qualitiesRequested, qualitiesReceived, qualitiesRequestFailed} = qualitiesSlice.actions\n\nexport const loadQualitiesList = () => async (dispatch, state) => {\n  if (isOutdated(state().qualities.lastFetch)) {\n    dispatch(qualitiesRequested())\n    try {\n      const {content} = await qualityService.get()\n      dispatch(qualitiesReceived(content))\n    } catch (err) {\n      dispatch(qualitiesRequestFailed(err.response?.data?.error || err.message))\n    }\n  }\n}\n\nexport const getQualities = () => state => state.qualities.entities\nexport const getQualitiesLoadingStatus = () => state => state.qualities.isLoading\n\nconst {reducer: qualitiesReducer} = qualitiesSlice\n\nexport default qualitiesReducer\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getQualities, getQualitiesLoadingStatus, loadQualitiesList } from '../../../store/qualities'\n\nconst Qualities = ({qualities: qualitiesId}) => {\n  const dispatch = useDispatch()\n  const qualities = useSelector(getQualities())\n  const isLoading = useSelector(getQualitiesLoadingStatus())\n\n  useEffect(() => {\n    dispatch(loadQualitiesList())\n  })\n\n  if (isLoading) {\n    return 'Loading...'\n  }\n\n  const userQualities = qualities ? qualitiesId.map(id => (qualities.find(q => (q._id === id)))) : []\n\n  return (\n    <>\n      {userQualities.map((q) => (\n        <Quality key={q._id}\n                 name={q.name}\n                 color={q.color}/>\n      ))}\n    </>\n  )\n}\n\nQualities.propTypes = {\n  qualities: PropTypes.array.isRequired\n}\n\nexport default Qualities\n\nconst Quality = ({name, color}) => {\n  return <span className={`badge bg-${color} m-1`}>{name}</span>\n}\n\nQuality.propTypes = {\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Qualities from '../../ui/qualities/qualities'\n\nconst UserCardQualities = ({qualities}) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Qualities</span>\n        </h5>\n        <p className=\"card-text\">\n          <Qualities qualities={qualities}/>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nUserCardQualities.propTypes = {\n  qualities: PropTypes.array.isRequired\n}\n\nexport default UserCardQualities\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst UserCardMeetings = ({completedMeetings}) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Completed meetings</span>\n        </h5>\n        <h1 className=\"display-1\">\n          {completedMeetings}\n        </h1>\n      </div>\n    </div>\n  )\n}\n\nUserCardMeetings.propTypes = {\n  completedMeetings: PropTypes.number\n}\n\nexport default UserCardMeetings\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport UserCardInfo from './userCardInfo'\nimport UserCardQualities from './userCardQualities'\nimport UserCardMeetings from './userCardMeetings'\n\nconst UserCard = ({user}) => {\n  return (\n    <div className=\"col-md-4 mb-3\">\n      <UserCardInfo user={user}/>\n\n      <UserCardQualities qualities={user.qualities}/>\n\n      <UserCardMeetings completedMeetings={user.completedMeetings}/>\n    </div>\n  )\n}\n\nUserCard.propTypes = {\n  user: PropTypes.object,\n  onClickButton: PropTypes.func\n}\n\nexport default UserCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { prepareDateForRender } from '../../../utils/prepareDateForRender'\nimport { useSelector } from 'react-redux'\nimport { getCurrentUserId, getUserById } from '../../../store/users'\n\nconst Comment = ({comment, onDelete}) => {\n  const currentUserId = useSelector(getCurrentUserId())\n\n  const user = useSelector(getUserById(comment.userId))\n\n  const messageDate = prepareDateForRender(comment.createdAt, Date.now())\n\n  return (\n    <div className=\"bg-light card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"d-flex flex-start\">\n            <img src={user.image}\n                 className=\"rounded-circle shadow-1-strong me-3\"\n                 alt=\"avatar\" width=\"65\" height=\"65\"/>\n            <div className=\"flex-grow-1 flex-shrink-1\">\n              <div className=\"mb-4\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <p className=\"mb-1\">\n                    {user.name}\n                    <span className=\"small ms-3\">\n                    {messageDate}\n                  </span>\n                  </p>\n                  {currentUserId === user._id &&\n                  <button className=\"btn btn-sm text-primary d-flex align-items-center\"\n                          onClick={() => onDelete(comment._id)}>\n                    <i className=\"bi bi-x-lg\"/>\n                  </button>}\n                </div>\n                <p className=\"small mb-0\">\n                  {comment.content}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nComment.propTypes = {\n  comment: PropTypes.object,\n  onDelete: PropTypes.func\n}\n\nexport default Comment\n","export function prepareDateForRender(start, end) {\n  const startDate = new Date(start)\n  const interval = end - startDate\n\n  const diffMinutes = interval / 1000 / 60\n\n  if (diffMinutes < 1) return '1 минуту назад'\n  if (diffMinutes < 5) return '5 минут назад'\n  if (diffMinutes < 10) return '10 минут назад'\n  if (diffMinutes < 30) return '30 минут назад'\n\n  const diffDays = interval / 1000 / 60 / 60 / 24\n\n  const minutes = ('0' + startDate.getMinutes()).slice(-2)\n  const hours = ('0' + startDate.getHours()).slice(-2)\n  const days = ('0' + startDate.getDate()).slice(-2)\n  const months = ('0' + (startDate.getMonth() + 1)).slice(-2)\n  const years = startDate.getFullYear()\n\n  if (diffDays < 1) return `${hours}:${minutes}`\n  if (diffDays < 365) return `${days}.${months}`\n  return `${days}.${months}.${years}`\n}\n","import httpService from './http.service'\n\nconst commentEndpoint = 'comment/'\n\nconst commentService = {\n  createComment: async (comment) => {\n    const {data} = await httpService.post(commentEndpoint, comment)\n    return data\n  },\n\n  getComments: async (pageId) => {\n    const {data} = await httpService.get(commentEndpoint, {\n      params: {\n        orderBy: 'pageId',\n        equalTo: `${pageId}`\n      }\n    })\n    return data\n  },\n\n  deleteComment: async (id) => {\n    const {data} = await httpService.delete(commentEndpoint + id)\n    return data\n  }\n}\n\n  export default commentService\n","import { createAction, createSlice } from '@reduxjs/toolkit'\nimport { toast } from 'react-toastify'\n// import { nanoid } from 'nanoid'\n\nimport commentService from '../services/comment.service'\n\nconst initialState = {\n  entities: null,\n  isLoading: true,\n  error: null\n}\n\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    commentsRequested(state) {\n      state.isLoading = true\n    },\n    commentsReceived(state, action) {\n      state.entities = action.payload\n      state.isLoading = false\n    },\n    commentsRequestFailed(state, action) {\n      state.error = action.payload\n      state.isLoading = false\n      toast.info(state.error)\n    },\n    commentCreated(state, action) {\n      state.entities.push(action.payload)\n    },\n    commentCreateFailed(state, action) {\n      state.error = action.payload\n      toast.info(state.error)\n    },\n    commentDeleted(state, action) {\n      if (!action.payload.content) {\n        state.entities = state.entities.filter(c => (c._id !== action.payload.id))\n      }\n    },\n    commentDeleteFailed(state, action) {\n      state.error = action.payload\n      toast.info(state.error)\n    }\n  }\n})\n\nconst {\n  commentsRequested,\n  commentsReceived,\n  commentsRequestFailed,\n  commentCreated,\n  commentCreateFailed,\n  commentDeleted,\n  commentDeleteFailed\n} = commentsSlice.actions\n\nconst commentCreateRequested = createAction('comments/commentCreateRequested')\nconst commentDeleteRequested = createAction('comments/commentDeleteRequested')\n\n// FOR CommentsList.jsx\nexport const loadCommentsList = (userId) => async (dispatch) => {\n  dispatch(commentsRequested())\n  try {\n    const {content} = await commentService.getComments(userId)\n    dispatch(commentsReceived(content))\n  } catch (err) {\n    dispatch(commentsRequestFailed(err.response?.data?.error || err.message))\n  }\n}\n\n// COMMENTS ACTIONS\nexport const createComment = (payload) => async (dispatch) => {\n  dispatch(commentCreateRequested())\n  try {\n    const {content} = await commentService.createComment(payload)\n    dispatch(commentCreated(content))\n  } catch (err) {\n    dispatch(commentCreateFailed(err.response?.data?.error || err.message))\n  }\n}\n\nexport const deleteComment = (id) => async (dispatch) => {\n  dispatch(commentDeleteRequested())\n  try {\n    const {content} = await commentService.deleteComment(id)\n    dispatch(commentDeleted({id, content}))\n  } catch (err) {\n    dispatch(commentDeleteFailed(err.response?.data?.error || err.message))\n  }\n}\n\n// SELECTORS\nexport const getComments = () => state => state.comments.entities\n\nexport const getCommentsLoadingStatus = () => state => state.comments.isLoading\n\nconst {reducer: commentsReducer} = commentsSlice\nexport default commentsReducer\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Comment from './comment'\nimport { deleteComment, getComments, getCommentsLoadingStatus, loadCommentsList } from '../../../store/comments'\nimport { useParams } from 'react-router-dom'\nimport { orderBy } from 'lodash'\n\nconst CommentsList = () => {\n  const dispatch = useDispatch()\n  const isLoading = useSelector(getCommentsLoadingStatus())\n  const comments = useSelector(getComments())\n\n  const {userId} = useParams()\n\n  useEffect(() => {\n    dispatch(loadCommentsList(userId))\n  }, [userId])\n\n  const handleDelete = (id) => {\n    dispatch(deleteComment(id))\n  }\n\n  const sortedComments = orderBy(comments, ['createdAt'], ['desc'])\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <h2>Comments</h2>\n        <hr/>\n\n        {isLoading\n          ? <p>Loading...</p>\n          : sortedComments.map(comment => (\n            <Comment key={comment._id} comment={comment} onDelete={handleDelete}/>\n          ))\n        }\n\n      </div>\n    </div>\n  )\n}\n\nCommentsList.propTypes = {\n  comments: PropTypes.array,\n  onDelete: PropTypes.func\n}\n\nexport default CommentsList\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextField = ({name, label, type = 'text', value, onChange, error}) => {\n  const [showPassword, setShowPassword] = useState(false)\n\n  const inputClasses = 'form-control' + (error ? ' is-invalid' : '')\n\n  const toggleShowPassword = () => {\n    setShowPassword(prev => !prev)\n  }\n\n  const handleChange = (event) => {\n    onChange({name: event.target.name, value: event.target.value})\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"input-group has-validation\">\n        <input name={name} id={name} type={showPassword ? 'text' : type} value={value} onChange={handleChange}\n               className={inputClasses}/>\n        {type === 'password' &&\n        <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\n          <i className={'bi bi-eye' + (showPassword ? '-slash' : '')}/>\n        </button>}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  )\n}\n\nTextField.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n}\n\nexport default TextField\n","export function validator(data, config) {\n  const errors = {}\n\n  function validate(validateMethod, data, config) {\n    switch (validateMethod) {\n      case 'isRequired':\n        if (typeof data === 'boolean') {\n          if (!data) return config.message\n        } else if (typeof data === 'object') {\n          if (Object.keys(data).length === 0) return config.message\n        } else {\n          if (data.trim() === '') return config.message\n        }\n        break\n      case 'isEmail':\n        // eslint-disable-next-line no-case-declarations\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\n        if (!emailRegExp.test(data)) return config.message\n        break\n      case 'hasCapital':\n        // eslint-disable-next-line no-case-declarations\n        const capitalRegExp = /[A-Z]+/g\n        if (!capitalRegExp.test(data)) return config.message\n        break\n      case 'hasNumber':\n        // eslint-disable-next-line no-case-declarations\n        const numberRegExp = /\\d+/g\n        if (!numberRegExp.test(data)) return config.message\n        break\n      case 'min':\n        if (data.length < config.value) return config.message\n        break\n    }\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod])\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error\n      }\n    }\n  }\n\n  return errors\n}\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport TextField from '../../common/form/textField'\nimport { validator } from '../../../utils/validator'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createComment } from '../../../store/comments'\nimport { getCurrentUserId } from '../../../store/users'\n\nconst validatorConfig = {\n  content: {\n    isRequired: {message: 'Сообщение не может быть пустым'}\n  }\n}\n\nconst CommentForm = ({userId: pageId}) => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState({content: ''})\n  const [errors, setErrors] = useState({})\n  const userId = useSelector(getCurrentUserId())\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  const handleChange = (field) => {\n    setData(prev => ({\n      ...prev,\n      [field.name]: field.value\n    }))\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n\n    dispatch(createComment({...data, pageId, userId}))\n  }\n\n  const isValid = (Object.keys(errors).length === 0)\n\n  return (\n    <div className=\"card mb-2\">\n      <div className=\"card-body\">\n        <h2>New comment</h2>\n\n        <form onSubmit={handleSubmit}>\n\n          <div className=\"mb-4\">\n            <TextField name=\"content\"\n                       label=\"Сообщение\"\n                       value={data.content}\n                       onChange={handleChange}\n                       error={errors.content}/>\n          </div>\n\n          <div className=\"text-end\">\n            <button className=\"btn btn-primary\"\n                    type=\"submit\"\n                    disabled={!isValid}>\n              Отправить\n            </button>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  )\n}\n\nCommentForm.propTypes = {\n  userId: PropTypes.string,\n  renderComments: PropTypes.func\n}\n\nexport default CommentForm\n","import UserPage from './userPage'\nexport default UserPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport UserCard from './userCard'\nimport CommentsList from './commentsList'\nimport CommentForm from './commentForm'\nimport { useSelector } from 'react-redux'\nimport { getUserById } from '../../../store/users'\n\nconst UserPage = ({userId}) => {\n  const user = useSelector(getUserById(userId))\n\n  if (!user) return <h3>Loading....</h3>\n\n  return (\n    <div className=\"container\">\n      <div className=\"row gutters-sm\">\n        <UserCard user={user}/>\n\n        <div className=\"col-md-8\">\n          <CommentForm userId={userId}/>\n\n          <CommentsList/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nUserPage.propTypes = {\n  userId: PropTypes.string.isRequired\n}\n\nexport default UserPage\n","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nconst Pagination = ({numberOfUsers, usersPerPage, currentPage, onPageChange}) => {\n  const numberOfPages = Math.ceil(numberOfUsers / usersPerPage)\n\n  if (numberOfPages === 1) return null\n\n  const pageNumbers = _.range(1, numberOfPages + 1)\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {pageNumbers.map((pageNumber) => {\n          return (\n            <li key={pageNumber} className={'page-item' + (pageNumber === currentPage ? ' active' : '')}>\n              <button className={'page-link'} onClick={() => onPageChange(pageNumber)}>\n                {pageNumber}\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nPagination.propTypes = {\n  numberOfUsers: PropTypes.number.isRequired,\n  usersPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes, {oneOfType} from 'prop-types'\n\nconst GroupList = ({selectedItem, items, valueProperty = '_id', contentProperty = 'name', onItemSelect}) => {\n  return (\n    <ul className=\"list-group\">\n      {Object.keys(items).map(key => (\n        <li key={items[key][valueProperty]}\n            className={'list-group-item' + (items[key] === selectedItem ? ' active' : '')}\n            role=\"button\"\n            onClick={() => onItemSelect(items[key])}>\n          {items[key][contentProperty]}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\n// GroupList.defaultProps = {\n//   valueProperty: '_id',\n//   contentProperty: 'name'\n// }\n\nGroupList.propTypes = {\n  selectedItem: PropTypes.object,\n  items: oneOfType([PropTypes.object.isRequired, PropTypes.array.isRequired]),\n  valueProperty: PropTypes.string,\n  contentProperty: PropTypes.string,\n  onItemSelect: PropTypes.func.isRequired\n}\n\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SearchStatus = ({numberOfUsers}) => {\n  const renderPhrase = (number) => {\n    if (number === 0) return 'Никто с тобой не тусанет'\n    if (number === 1) return '1 человек тусанет с тобой сегодня'\n    return `${number} человек${letterA(number)} тусанут с тобой сегодня`\n  }\n\n  const letterA = (number) => {\n    const digits = number.toString().split('')\n    if (digits[1] === '1') return ''\n    if (['2', '3', '4'].includes(digits[0])) return 'а'\n    return ''\n  }\n\n  return (\n    <h1>\n      <span className={`badge bg-${numberOfUsers ? 'primary' : 'danger'}`}>{renderPhrase(numberOfUsers)}</span>\n    </h1>\n  )\n}\n\nSearchStatus.propTypes = {\n  numberOfUsers: PropTypes.number.isRequired\n}\n\nexport default SearchStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Bookmark = ({status, onBookmark}) => {\n  return (\n    <i\n      className={`bi bi-bookmark${status ? '-fill' : ''}`}\n      style={{fontSize: '1.5rem', color: `${status ? '' : 'light'}green`}}\n      onClick={onBookmark}\n    />\n  )\n}\n\nBookmark.propTypes = {\n  status: PropTypes.bool,\n  onBookmark: PropTypes.func\n}\n\nexport default Bookmark\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TableHeader = ({columns, sortSet, onSort}) => {\n  const handleSort = (path) => {\n    if (sortSet.path === path) {\n      onSort({...sortSet, order: sortSet.order === 'asc' ? 'desc' : 'asc'})\n    } else {\n      onSort({path, order: 'asc'})\n    }\n  }\n\n  const showSortSign = (path) => {\n    if (path === sortSet.path) {\n      return ((sortSet.order === 'asc')\n        ? <i className=\"bi bi-caret-up-fill\"/>\n        : <i className=\"bi bi-caret-down-fill\"/>)\n    }\n    return null\n  }\n\n  return (\n    <thead>\n      <tr>\n        {Object.keys(columns).map(key => (\n          <th key={key}\n              scope=\"col\"\n              onClick={columns[key].path && (() => handleSort(columns[key].path))}\n              {...columns[key].path && {role: 'button'}}>\n            {columns[key].name}\n            {showSortSign(columns[key].path)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\n\nTableHeader.propTypes = {\n  columns: PropTypes.object.isRequired,\n  sortSet: PropTypes.object.isRequired,\n  onSort: PropTypes.func.isRequired\n}\n\nexport default TableHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nconst TableBody = ({data, columns}) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component\n      if (typeof component === 'function') {\n        return component(item)\n      }\n      return columns[column].component\n    }\n    return _.get(item, columns[column].path)\n  }\n\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {Object.keys(columns).map(column => (\n            <td key={column}>\n              {renderContent(item, column)}\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\n\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n}\n\nexport default TableBody\n","import Table from './table'\nimport TableBody from './tableBody'\nimport TableHeader from './tableHeader'\n\nexport default Table\nexport {TableBody, TableHeader}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({data, columns, sortSet, onSort, children}) => {\n  return (\n    <table className=\"table table-hover\">\n      {children ||\n      <>\n        <TableHeader {...{columns, sortSet, onSort}}/>\n        <TableBody {...{columns, data}}/>\n      </>}\n    </table>\n  )\n}\n\nTable.propTypes = {\n  data: PropTypes.array,\n  columns: PropTypes.object,\n  sortSet: PropTypes.object,\n  onSort: PropTypes.func,\n  children: PropTypes.array\n}\n\nexport default Table\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getProfessionById, getProfessionsLoadingStatus, loadProfessionsList } from '../../store/professions'\n\nconst Profession = ({id}) => {\n  const dispatch = useDispatch()\n  const isLoading = useSelector(getProfessionsLoadingStatus())\n  const prof = useSelector(getProfessionById(id))\n\n  useEffect(() => {\n    dispatch(loadProfessionsList())\n  }, [])\n\n  if (isLoading) {\n    return 'Loading...'\n  }\n\n  return (<p>{prof.name}</p>)\n}\n\nProfession.propTypes = {\n  id: PropTypes.string\n}\n\nexport default Profession\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Bookmark from '../common/bookmark'\nimport Qualities from './qualities/qualities'\nimport Table from '../common/table'\nimport {Link} from 'react-router-dom'\nimport Profession from './profession'\n\nconst UsersTable = ({users, onSort, sortSet, onBookmark}) => {\n  const columns = {\n    name: {\n      path: 'name',\n      name: 'Имя',\n      // eslint-disable-next-line react/display-name\n      component: (user) => (\n        <Link to={`/users/${user._id}`}>{user.name}</Link>)\n    },\n    qualities: {\n      name: 'Качества',\n      // eslint-disable-next-line react/display-name\n      component: (user) => <Qualities qualities={user.qualities}/>\n    },\n    profession: {\n      name: 'Профессия',\n      component: (user) => <Profession id={user.profession}/>\n    },\n    completedMeetings: {path: 'completedMeetings', name: 'Встретился, раз'},\n    rate: {path: 'rate', name: 'Оценка'},\n    bookmark: {\n      path: 'bookmark',\n      name: 'Избранное',\n      // eslint-disable-next-line react/display-name\n      component: (user) => (\n        <Bookmark status={user.bookmark} onBookmark={() => onBookmark(user._id)}/>)\n    }\n  }\n\n  return (\n    <Table {...{data: users, columns, sortSet, onSort}}/>\n    // <Table>\n    //   <TableHeader {...{columns, sortSet, onSort}}/>\n    //   <TableBody {...{columns, data: users}}/>\n    // </Table>\n  )\n}\n\nUsersTable.propTypes = {\n  users: PropTypes.array.isRequired,\n  sortSet: PropTypes.object.isRequired,\n  onSort: PropTypes.func.isRequired,\n  onBookmark: PropTypes.func.isRequired\n}\n\nexport default UsersTable\n","import UsersListPage from './usersListPage'\nexport default UsersListPage\n","import React, { useEffect, useState } from 'react'\nimport _ from 'lodash'\nimport { useSelector } from 'react-redux'\n\nimport Pagination from '../../common/pagination'\nimport { paginate } from '../../../utils/paginate'\nimport GroupList from '../../common/groupList'\nimport SearchStatus from '../../ui/searchStatus'\nimport UsersTable from '../../ui/usersTable'\nimport { getProfessionsList, getProfessionsLoadingStatus } from '../../../store/professions'\nimport { getCurrentUserId, getUsersList } from '../../../store/users'\n\nconst UsersListPage = () => {\n  const usersPerPage = 8\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [selectedProf, setSelectedProf] = useState()\n  const [sortBy, setSortBy] = useState({path: 'rate', order: 'acs'})\n  const [search, setSearch] = useState('')\n\n  const allUsers = useSelector(getUsersList())\n  const professions = useSelector(getProfessionsList())\n  const professionsLoading = useSelector(getProfessionsLoadingStatus())\n  const currentUserId = useSelector(getCurrentUserId())\n\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [selectedProf, search])\n\n  if (!allUsers) return <h3>Loading...</h3>\n\n  const handleBookmark = (userId) => {\n    // const newArray = allUsers.map((user) => {\n    //   if (user._id === userId) {\n    //     return {...user, bookmark: !user.bookmark}\n    //   }\n    //   return newArray\n    // })\n  }\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex)\n  }\n\n  const handleProfessionSelect = (item) => {\n    setSelectedProf(item)\n    setSearch('')\n  }\n\n  const handleSort = (sortSet) => {\n    setSortBy(sortSet)\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n    setSelectedProf()\n  }\n\n  const clearFilter = () => {\n    setSelectedProf()\n    setSearch('')\n  }\n\n  const filterUsers = () => {\n    const users = allUsers.filter(user => user._id !== currentUserId)\n\n    if (selectedProf) {\n      return users.filter(user => user.profession === selectedProf._id)\n    }\n    if (search) {\n      return users.filter(user => user.name.toLowerCase().includes(search.toLowerCase()))\n    }\n    return users\n  }\n\n  const filteredUsers = filterUsers()\n\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order])\n\n  const usersOfPage = paginate(sortedUsers, currentPage, usersPerPage)\n\n  const numberOfUsers = filteredUsers.length\n\n  if ((currentPage > 1) && (currentPage >= numberOfUsers / usersPerPage + 1)) {\n    setCurrentPage(Math.floor(numberOfUsers / usersPerPage))\n  }\n\n  return (\n    <div className=\"d-flex\">\n      {professions && !professionsLoading &&\n      <div className=\"d-flex flex-column flex-lg-shrink-0 p-3\">\n        <GroupList selectedItem={selectedProf} items={professions} onItemSelect={handleProfessionSelect}/>\n        <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>Очистить</button>\n      </div>\n      }\n      <div className=\"d-flex flex-column\">\n        <SearchStatus numberOfUsers={numberOfUsers}/>\n        <input type=\"text\" value={search} onChange={handleSearch} className=\"form-control\" placeholder=\"Search...\"/>\n        {numberOfUsers > 0 && (\n          <UsersTable users={usersOfPage}\n                      onSort={handleSort}\n                      sortSet={sortBy}\n                      onBookmark={handleBookmark}/>\n        )}\n        <div className=\"d-flex justify-content-center\">\n          <Pagination numberOfUsers={numberOfUsers}\n                      usersPerPage={usersPerPage}\n                      currentPage={currentPage}\n                      onPageChange={handlePageChange}/>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default UsersListPage\n","import _ from 'lodash'\n\nexport function paginate(items, pageNumber, itemsPerPage) {\n  const startIndex = (pageNumber - 1) * itemsPerPage\n  return _(items).slice(startIndex).take(itemsPerPage).value()\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport React, { useEffect } from 'react'\n\nimport { getDataStatus, loadUsersList } from '../../../store/users'\nimport PropTypes from 'prop-types'\n\nconst UsersLoader = ({children}) => {\n  const dispatch = useDispatch()\n  const dataStatus = useSelector(getDataStatus())\n\n  useEffect(() => {\n    if (!dataStatus) {\n      dispatch(loadUsersList())\n    }\n  }, [])\n\n  if (!dataStatus) {\n    return <h1>Loading...</h1>\n  }\n\n  return children\n}\nUsersLoader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n}\n\nexport default UsersLoader\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SelectField = ({label, value, onChange, defaultOption, options, error}) => {\n  const optionsArray = (!Array.isArray(options)) && (typeof options === 'object')\n    ? Object.keys(options).map(i => ({label: options[i].label, value: options[i].value}))\n    : options\n\n  const handleChange = (event) => {\n    onChange({name: event.target.name, value: event.target.value})\n  }\n\n  const inputClasses = 'form-select' + (error ? ' is-invalid' : '')\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">{label}</label>\n      <select name=\"profession\" value={value} onChange={handleChange}\n              className={inputClasses} id=\"validationCustom04\" required>\n        <option value=\"\" disabled>\n          {defaultOption}\n        </option>\n\n        {optionsArray && optionsArray.map(i => (\n          <option key={i.value} value={i.value}>{i.label}</option>\n        ))}\n\n      </select>\n      {error && <div className=\"invalid-feedback\">\n        {error}\n      </div>}\n    </div>\n  )\n}\n\nSelectField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultOption: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  error: PropTypes.string\n}\n\nexport default SelectField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RadioField = ({name, label, options, value, onChange}) => {\n  const handleChange = (event) => {\n    onChange({name: event.target.name, value: event.target.value})\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n\n      <div>\n        {options.map(i => (\n          <div key={i.name + '_' + i.value} className=\"form-check form-check-inline\">\n            <input name={name} value={i.value} id={i.name + '_' + i.value} checked={i.value === value}\n                   onChange={handleChange}\n                   className=\"form-check-input\" type=\"radio\"/>\n            <label htmlFor={i.name + '_' + i.value}\n                   className=\"form-check-label\">{i.name}</label>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nRadioField.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string,\n    options: PropTypes.array,\n    value: PropTypes.string,\n    onChange: PropTypes.func\n  }\n\nexport default RadioField\n","import React from 'react'\nimport Select from 'react-select'\nimport PropTypes from 'prop-types'\n\nconst MultiSelectField = ({options, name, onChange, label, value}) => {\n  const optionsArray = (!Array.isArray(options)) && (typeof options === 'object')\n    ? Object.keys(options).map(i => ({label: options[i].name, value: options[i]._id}))\n    : options\n\n  const handleChange = (field) => {\n    onChange({name: name, value: field})\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <Select\n        isMulti\n        closeMenuOnSelect={false}\n        defaultValue={value}\n        name={name}\n        options={optionsArray}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.array,\n    onChange: PropTypes.func\n    // error: PropTypes.string\n  }\nexport default MultiSelectField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckboxField = ({name, value, onChange, children, error}) => {\n  const handleChange = (event) => {\n    onChange({name: name, value: !value})\n  }\n\n  const inputClasses = 'form-check-input' + (error ? ' is-invalid' : '')\n\n  return (\n    <div className=\"form-check mb-4\">\n      <input checked={value} className={inputClasses} type=\"checkbox\" value=\"\" id={name} onChange={handleChange}/>\n      <label className=\"form-check-label\" htmlFor={name}>\n        {children}\n      </label>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nCheckboxField.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  error: PropTypes.string\n}\n\nexport default CheckboxField\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { validator } from '../../../utils/validator'\nimport TextField from '../../common/form/textField'\nimport SelectField from '../../common/form/selectField'\nimport RadioField from '../../common/form/radioField'\nimport MultiSelectField from '../../common/form/multiSelectField'\nimport CheckboxField from '../../common/form/checkboxField'\nimport { getQualities, getQualitiesLoadingStatus } from '../../../store/qualities'\nimport { getProfessionsList, getProfessionsLoadingStatus } from '../../../store/professions'\nimport { getCurrentUserData, updateUserData } from '../../../store/users'\n\nconst validatorConfig = {\n  name: {\n    isRequired: {message: 'Имя обязательно для заполнения'}\n  },\n  email: {\n    isRequired: {message: 'Электронная почта обязательна для заполнения'},\n    isEmail: {message: 'Введите корректный email'}\n  },\n  password: {\n    isRequired: {message: 'Пароль обязателен для заполнения'},\n    hasCapital: {message: 'Пароль должен содержать хотя бы одну заглавную букву'},\n    hasNumber: {message: 'Пароль должен содержать хотя бы одну цифру'},\n    min: {message: 'Пароль должен состоять из 8 и более символов', value: 8}\n  },\n  profession: {\n    isRequired: {message: 'Профессию выбрать обязательно'}\n  },\n  license: {\n    isRequired: {message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'}\n  }\n}\n\nconst EditUserPage = () => {\n  const dispatch = useDispatch()\n  const {userId} = useParams()\n  const [data, setData] = useState()\n  const [errors, setErrors] = useState({})\n\n  const currentUser = useSelector(getCurrentUserData())\n\n  const professions = useSelector(getProfessionsList())\n  const professionIsLoading = useSelector(getProfessionsLoadingStatus())\n  const professionsList = professions.map(p => ({label: p.name, value: p._id}))\n\n  const qualities = useSelector(getQualities())\n  const qualityIsLoading = useSelector(getQualitiesLoadingStatus())\n  const qualitiesList = qualities.map(q => ({label: q.name, value: q._id}))\n\n  const history = useHistory()\n\n  if (userId && currentUser._id && userId !== currentUser._id) {\n    history.push(`/users/${currentUser._id}/edit`)\n  }\n\n  useEffect(() => {\n    if (!professionIsLoading && !qualityIsLoading && currentUser) {\n      fillData(currentUser)\n    }\n  }, [professionIsLoading, qualityIsLoading])\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const fillData = (user) => {\n    const data = {\n      name: user.name,\n      email: user.email ? user.email : '',\n      password: user.password ? user.password : '',\n      profession: user.profession ? user.profession : '',\n      sex: user.sex ? user.sex : 'male',\n      qualities: user.qualities\n        ? fillQualities(user.qualities)\n        : [],\n      license: user.license ? user.license : true\n    }\n    setData(data)\n  }\n\n  const fillQualities = (qualitiesId) => {\n    return qualitiesList.filter(q => (qualitiesId.includes(q.value)))\n  }\n\n  const handleChange = (field) => {\n    setData(prev => ({\n      ...prev,\n      [field.name]: field.value\n    }))\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n\n    const qualities = data.qualities.map(q => q.value)\n    const newData = {\n      ...data,\n      qualities\n    }\n\n    dispatch(updateUserData(newData))\n  }\n\n  const goBack = () => {\n    history.push(`/users/${userId}`)\n  }\n\n  const isValid = (Object.keys(errors).length === 0)\n\n  return (\n    <div className=\"container mt-5\">\n      <button className=\"btn btn-primary\"\n              onClick={goBack}>\n        <i className=\"bi bi-caret-left\"/>\n        Назад\n      </button>\n\n      <div className=\"offset-md-3 col-md-6 shadow p-3\">\n        {!data\n          ? <h1>Loading...</h1>\n          : <form onSubmit={handleSubmit}>\n            <TextField name=\"name\"\n                       label=\"Имя\"\n                       value={data.name}\n                       onChange={handleChange}\n                       error={errors.name}/>\n            <TextField name=\"email\"\n                       label=\"Электронная почта\"\n                       value={data.email}\n                       onChange={handleChange}\n                       error={errors.email}/>\n            <TextField name=\"password\"\n                       label=\"Пароль\"\n                       type=\"password\"\n                       value={data.password}\n                       onChange={handleChange}\n                       error={errors.password}/>\n            <SelectField value={data.profession}\n                         options={professionsList}\n                         onChange={handleChange}\n                         defaultOption=\"Choose...\"\n                         error={errors.profession}\n                         label=\"Выберите профессию\"/>\n            <RadioField value={data.sex}\n                        name=\"sex\"\n                        onChange={handleChange}\n                        label=\"Выберите пол\"\n                        options={[\n                          {name: 'Male', value: 'male'},\n                          {name: 'Female', value: 'female'},\n                          {name: 'Other', value: 'other'}\n                        ]}/>\n            <MultiSelectField value={data.qualities}\n                              name=\"qualities\"\n                              options={qualitiesList}\n                              onChange={handleChange}\n                              label=\"Выберите качества\"/>\n            <CheckboxField value={data.license}\n                           onChange={handleChange}\n                           name=\"license\"\n                           error={errors.license}>\n              Подтвердить <a>лицензионное соглашение</a>\n            </CheckboxField>\n\n            <button type=\"submit\"\n                    disabled={!isValid}\n                    className=\"btn btn-outline-primary w-100\">\n              Submit\n            </button>\n          </form>\n        }\n      </div>\n    </div>\n  )\n}\n\nEditUserPage.propTypes = {\n  userId: PropTypes.string\n}\n\nexport default EditUserPage\n","import React from 'react'\n\nimport UserPage from '../components/page/userPage'\nimport UsersListPage from '../components/page/usersListPage'\nimport { Redirect, useParams } from 'react-router-dom'\nimport UsersLoader from '../components/ui/hoc/usersLoader'\nimport { useSelector } from 'react-redux'\nimport { getCurrentUserId } from '../store/users'\nimport EditUserPage from '../components/page/editUserPage/editUserPage'\n\nconst Users = () => {\n  const {userId, edit} = useParams()\n  const currentUserId = useSelector(getCurrentUserId())\n\n  return (\n    <UsersLoader>\n      {userId\n        ? edit\n          ? userId === currentUserId\n            ? <EditUserPage/>\n            : <Redirect to={`/users/${currentUserId}/edit`}/>\n          : <UserPage userId={userId}/>\n        : <UsersListPage/>\n      }\n    </UsersLoader>\n  )\n}\n\nexport default Users\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { getCurrentUserData } from '../../store/users'\n\nconst NavProfile = () => {\n  const [isOpen, setOpen] = useState(false)\n  const currentUser = useSelector(getCurrentUserData())\n\n  const toggleMenu = () => setOpen((prev) => !prev)\n\n  if (!currentUser) {\n    return (\n      <Link to=\"/logout\"\n            className=\"nav-link\">\n        Log out\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"dropdown\"\n         onClick={toggleMenu}>\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\n        <div className=\"me-2\">\n          {currentUser.name}\n        </div>\n        <img src={currentUser.image}\n             className=\"img-responsive rounded-circle\"\n             alt=\"User photo\"\n             height=\"40\"/>\n      </div>\n\n      <div className={'w-100 dropdown-menu' + (isOpen ? ' show' : '')} style={{right: 0}}>\n        <Link to={`/users/${currentUser._id}`}\n              className=\"dropdown-item\">\n          Profile\n        </Link>\n        <Link to=\"/logout\"\n              className=\"dropdown-item\">\n          Log out\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default NavProfile\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport NavProfile from './navProfile'\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from '../../store/users'\n\nconst NavBar = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn())\n\n  return (\n    <nav className=\"navbar bg-info mb-4\">\n      <div className=\"d-inline-block\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/\" exact\n                     className=\"nav-link\"\n                     activeStyle={{fontWeight: 'bold'}}>\n              Main\n            </NavLink>\n          </li>\n\n          {isLoggedIn &&\n          <li className=\"nav-item\">\n            <NavLink to=\"/users\"\n                     className=\"nav-link\"\n                     activeStyle={{fontWeight: 'bold'}}>\n              Users\n            </NavLink>\n          </li>}\n        </ul>\n      </div>\n\n      <div className=\"d-flex\">\n        {isLoggedIn\n          ? <NavProfile/>\n          : <NavLink to=\"/login\"\n                     className=\"nav-link\">\n            Login\n          </NavLink>\n        }\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import professions from '../mockData/professions.json'\nimport qualities from '../mockData/qualities.json'\nimport users from '../mockData/users.json'\nimport { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport httpService from '../services/http.service'\n\nconst useMockData = () => {\n  const statusConsts = {\n    idle: 'Not started',\n    pending: 'In process',\n    success: 'Ready',\n    error: 'Error occurred'\n  }\n\n  const [error, setError] = useState(null)\n  const [status, setStatus] = useState(statusConsts.idle)\n  const [progress, setProgress] = useState(0)\n  const [count, setCount] = useState(0)\n\n  useEffect(() => {\n    if (error) {\n      toast.info(error)\n    }\n  }, [error])\n\n  const summaryCount = professions.length + qualities.length + users.length\n\n  const incrementCount = () => {\n    setCount((prev) => {\n      return prev + 1\n    })\n  }\n\n  const updateProgress = () => {\n    if (count !== 0 && status === statusConsts.idle) {\n      setStatus(statusConsts.pending)\n    }\n\n    const newProgress = Math.floor((count / summaryCount) * 100)\n    if (progress < newProgress) {\n      setProgress(() => newProgress)\n    }\n\n    if (newProgress === 100) {\n      setStatus(statusConsts.success)\n    }\n  }\n\n  useEffect(() => {\n    updateProgress()\n  }, [count])\n\n  async function initialize() {\n    try {\n      for (const p of professions) {\n        await httpService.put('profession/' + p._id, p)\n        incrementCount()\n      }\n\n      for (const q of qualities) {\n        await httpService.put('quality/' + q._id, q)\n        incrementCount()\n      }\n\n      for (const u of users) {\n        await httpService.put('user/' + u._id, u)\n        // await userService.create(u)\n        incrementCount()\n      }\n    } catch (err) {\n      setError(err.response?.data?.error || err.message)\n      setStatus(statusConsts.error)\n    }\n  }\n\n  return {error, initialize, progress, status}\n}\n\nexport default useMockData\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport useMockData from '../utils/mockData'\n\nconst Main = ({isAdmin}) => {\n  const {error, initialize, progress, status} = useMockData()\n\n  const handleClick = () => {\n    initialize()\n  }\n  return (\n    <div className=\"container mt-5\">\n      <h1>Main</h1>\n      <h3>Инициализация данных в Firebase</h3>\n      <button className=\"btn btn-outline-primary\"\n              onClick={handleClick}>\n        Инициализировать\n      </button>\n      <ul>\n        <li>Status: {status}</li>\n        <li>Progress: {progress}</li>\n        {error && <li>Error: {error}</li>}\n      </ul>\n    </div>\n  )\n}\n\nMain.propTypes = {\n  isAdmin: PropTypes.bool\n}\n\nexport default Main\n","import React, { useEffect, useState } from 'react'\nimport { validator } from '../../utils/validator'\nimport TextField from '../common/form/textField'\nimport CheckboxField from '../common/form/checkboxField'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAuthError, login } from '../../store/users'\n\nconst validatorConfig = {\n  email: {\n    isRequired: {message: 'Электронная почта обязательна для заполнения'},\n    isEmail: {message: 'Введите корректный email'}\n  },\n  password: {\n    isRequired: {message: 'Пароль обязателен для заполнения'},\n    hasCapital: {message: 'Пароль должен содержать хотя бы одну заглавную букву'},\n    hasNumber: {message: 'Пароль должен содержать хотя бы одну цифру'},\n    min: {message: 'Пароль должен состоять из 8 и более символов', value: 8}\n  }\n}\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState({email: '', password: '', stayOn: false})\n  const [errors, setErrors] = useState({})\n  const loginError = useSelector(getAuthError())\n\n  const isValid = (Object.keys(errors).length === 0)\n\n  const history = useHistory()\n\n  const handleChange = (field) => {\n    setData(prev => ({\n      ...prev,\n      [field.name]: field.value\n    }))\n  }\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n\n    const redirect = history.location.state?.from?.pathname ?? '/'\n    dispatch(login({payload: data, redirect}))\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField name=\"email\"\n                 label=\"Электронная почта\"\n                 value={data.email}\n                 onChange={handleChange}\n                 error={errors.email}/>\n      <TextField name=\"password\"\n                 label=\"Пароль\"\n                 type=\"password\"\n                 value={data.password}\n                 onChange={handleChange}\n                 error={errors.password}/>\n      <CheckboxField value={data.stayOn}\n                     onChange={handleChange}\n                     name=\"stayOn\">\n        Оставаться в системе\n      </CheckboxField>\n\n      {loginError &&\n      <p className=\"text-danger\">\n        {loginError}\n      </p>}\n\n      <button type=\"submit\"\n              disabled={!isValid}\n              className=\"btn btn-outline-primary w-100\">\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { validator } from '../../utils/validator'\nimport TextField from '../common/form/textField'\nimport SelectField from '../common/form/selectField'\nimport RadioField from '../common/form/radioField'\nimport MultiSelectField from '../common/form/multiSelectField'\nimport CheckboxField from '../common/form/checkboxField'\nimport { getQualities, getQualitiesLoadingStatus } from '../../store/qualities'\nimport { getProfessionsList, getProfessionsLoadingStatus } from '../../store/professions'\nimport { signUp } from '../../store/users'\n\nconst validatorConfig = {\n  email: {\n    isRequired: {message: 'Электронная почта обязательна для заполнения'},\n    isEmail: {message: 'Введите корректный email'}\n  },\n  name: {\n    isRequired: {message: 'Имя обязательно для заполнения'},\n    min: {message: 'Имя должно состоять из 3 и более символов', value: 3}\n  },\n  password: {\n    isRequired: {message: 'Пароль обязателен для заполнения'},\n    hasCapital: {message: 'Пароль должен содержать хотя бы одну заглавную букву'},\n    hasNumber: {message: 'Пароль должен содержать хотя бы одну цифру'},\n    min: {message: 'Пароль должен состоять из 8 и более символов', value: 8}\n  },\n  profession: {\n    isRequired: {message: 'Профессию выбрать обязательно'}\n  },\n  license: {\n    isRequired: {message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'}\n  }\n}\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState(null)\n  const [errors, setErrors] = useState({})\n\n  const professions = useSelector(getProfessionsList())\n  const professionIsLoading = useSelector(getProfessionsLoadingStatus())\n  const professionsList = professions.map(p => ({label: p.name, value: p._id}))\n\n  const qualities = useSelector(getQualities())\n  const qualityIsLoading = useSelector(getQualitiesLoadingStatus())\n  const qualitiesList = qualities.map(q => ({label: q.name, value: q._id}))\n\n  const isValid = (Object.keys(errors).length === 0)\n\n  useEffect(() => {\n    if (!professionIsLoading && !qualityIsLoading) {\n      setData({\n        email: '',\n        password: '',\n        profession: '',\n        sex: 'male',\n        name: '',\n        qualities: [],\n        license: false\n      })\n    }\n  }, [professionIsLoading, qualityIsLoading])\n\n  useEffect(() => {\n    validate()\n  }, [data])\n\n  const handleChange = (field) => {\n    setData(prev => ({\n      ...prev,\n      [field.name]: field.value\n    }))\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n    const newData = {...data, qualities: data.qualities.map(q => q.value)}\n\n    dispatch(signUp(newData))\n  }\n\n  if (!data || professionIsLoading || qualityIsLoading) {\n    return <h1>Loading...</h1>\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField name=\"email\"\n                 label=\"Электронная почта\"\n                 value={data.email}\n                 onChange={handleChange}\n                 error={errors.email}/>\n      <TextField name=\"name\"\n                 label=\"Имя\"\n                 value={data.name}\n                 onChange={handleChange}\n                 error={errors.name}/>\n      <TextField name=\"password\"\n                 label=\"Пароль\"\n                 type=\"password\"\n                 value={data.password}\n                 onChange={handleChange}\n                 error={errors.password}/>\n      <SelectField value={data.profession}\n                   options={professionsList}\n                   onChange={handleChange}\n                   defaultOption=\"Choose...\"\n                   error={errors.profession}\n                   label=\"Выберите профессию\"/>\n      <RadioField value={data.sex}\n                  name=\"sex\"\n                  onChange={handleChange}\n                  label=\"Выберите пол\"\n                  options={[\n                    {name: 'Male', value: 'male'},\n                    {name: 'Female', value: 'female'},\n                    {name: 'Other', value: 'other'}\n                  ]}/>\n      <MultiSelectField name=\"qualities\"\n                        options={qualitiesList}\n                        onChange={handleChange}\n                        label=\"Выберите качества\"/>\n      <CheckboxField value={data.license}\n                     onChange={handleChange}\n                     name=\"license\"\n                     error={errors.license}>\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckboxField>\n\n      <button type=\"submit\"\n              disabled={!isValid}\n              className=\"btn btn-outline-primary w-100\">\n        Submit\n      </button>\n    </form>\n\n  )\n}\n\nexport default RegisterForm\n","import React, { useState } from 'react'\nimport LoginForm from '../components/ui/loginForm'\nimport { useParams } from 'react-router-dom'\nimport RegisterForm from '../components/ui/registerForm'\n\nconst Login = () => {\n  const {type} = useParams()\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\n\n  const toggleFormType = (params) => {\n    setFormType(prev => prev === 'register' ? 'login' : 'register')\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"offset-md-3 col-md-6 shadow p-3\">\n          {formType === 'register'\n            ? <>\n              <h3 className=\"mb-3\">Register</h3>\n              <RegisterForm/>\n              <p>Already have account?&nbsp;\n                <a role=\"button\"\n                   style={{color: 'blueviolet', fontWeight: 'bold'}}\n                   onClick={toggleFormType}>Log in</a></p>\n            </>\n            : <>\n              <h3 className=\"mb-3\">Login</h3>\n              <LoginForm/>\n              <p>Dont have account?&nbsp;\n                <a role=\"button\"\n                   style={{color: 'blueviolet', fontWeight: 'bold'}}\n                   onClick={toggleFormType}>\n                  Sign up\n                </a>\n              </p>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from '../../store/users'\n\nconst ProtectedRoute = ({component: Component, children, ...rest}) => {\n  const isLoggedIn = useSelector(getIsLoggedIn())\n\n  return (<Route {...rest} render={(props) => {\n    if (!isLoggedIn) {\n      return <Redirect to={{\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }}/>\n    }\n    return Component ? <Component {...props} /> : children\n  }\n  }/>)\n}\n\nProtectedRoute.propTypes = {\n  component: PropTypes.func,\n  location: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n}\n\nexport default ProtectedRoute\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { logout } from '../store/users'\n\nconst Logout = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(logout())\n  }, [])\n\n  return (<h1>Loading...</h1>)\n}\n\nexport default Logout\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadQualitiesList } from '../../../store/qualities'\nimport { loadProfessionsList } from '../../../store/professions'\nimport { getIsLoggedIn, getUsersLoadingStatus, loadUsersList } from '../../../store/users'\n\nconst AppLoader = ({children}) => {\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector(getIsLoggedIn())\n  const usersIsLoading = useSelector(getUsersLoadingStatus())\n\n  useEffect(() => {\n    dispatch(loadQualitiesList())\n    dispatch(loadProfessionsList())\n    if (isLoggedIn) {\n      dispatch(loadUsersList())\n    }\n  }, [isLoggedIn])\n\n  if (usersIsLoading) {\n    return <h2>Loading...</h2>\n  }\n\n  return children\n}\n\nAppLoader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n}\n\nexport default AppLoader\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport Users from './layouts/users'\nimport NavBar from './components/ui/navBar'\nimport Main from './layouts/main'\nimport Login from './layouts/login'\nimport ProtectedRoute from './components/common/protectedRoute'\nimport Logout from './layouts/logout'\nimport EditUserPage from './components/page/editUserPage/editUserPage'\nimport AppLoader from './components/ui/hoc/appLoader'\n\nconst App = () => {\n  return (\n    <AppLoader>\n      <NavBar/>\n      <Switch>\n        <Route path=\"/login/:type?\"><Login/></Route>\n        <Route path=\"/logout\"><Logout/></Route>\n        <Route path=\"/users/:userId?/edit\"><EditUserPage/></Route>\n        <ProtectedRoute path=\"/users/:userId?\"><Users/></ProtectedRoute>\n        <Route path=\"/\" exact><Main/></Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n      <ToastContainer/>\n    </AppLoader>\n  )\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport qualitiesReducer from './qualities'\nimport professionsReducer from './professions'\nimport usersReducer from './users'\nimport commentsReducer from './comments'\n\nconst rootReducer = combineReducers({\n  qualities: qualitiesReducer,\n  professions: professionsReducer,\n  users: usersReducer,\n  comments: commentsReducer\n})\n\nfunction createStore() {\n  return configureStore({\n    reducer: rootReducer\n  })\n}\n\nexport default createStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport './index.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport App from './app'\nimport createStore from './store/createStore'\nimport history from './utils/history'\n\nconst store = createStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App/>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}